!function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=3)}([function(t,e,r){(t.exports=r(7)(!1)).push([t.i,'a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:\'\';content:none}table{border-collapse:collapse;border-spacing:0}:root{--primary-color:#f6755e;--secondary-color:#25a2c3;--info-color:#8c9eff;--success-color:#4CAF50;--error-color:#b71c1c;--warning-color:#FFC107;--primary-contrast-color:#fff;--secondary-contrast-color:#fff;--info-contrast-color:#fff;--success-contrast-color:#fff;--error-contrast-color:#fff;--warning-contrast-color:#fff;--link-color:#1867c0;--input-border-color:#dddfe2}.center{margin-left:auto;margin-right:auto}.border{border:1px solid #000}.block{display:block}.width-full{width:100%}.text-center{text-align:center}.text-right{text-align:right}.text-primary{color:var(--primary-color)}.text-secondary{color:var(--secondary-color)}.text-info{color:var(--info-color)}.text-error{color:var(--error-color)}.text-warning{color:var(--warning-color)}.text-success{color:var(--success-color)}.quote:after,.quote:before{content:"\\201C";font-family:Sanchez}.highlight{position:relative;padding-left:1em;border-left:.2em solid;font-size:1.4em;line-height:1.5em;font-weight:100}.highlight.primary{border-left-color:var(--primary-color)}.highlight.secondary{border-left-color:var(--secondary-color)}.highlight.info{border-left-color:var(--info-color)}.highlight.error{border-left-color:var(--error-color)}.highlight.warning{border-left-color:var(--warning-color)}.highlight.success{border-left-color:var(--success-color)}.row{display:flex}.row:not(.no-wrap){flex-wrap:wrap}.row.content-center{justify-content:center}.row.content-v-center{align-items:center}.col,.column{display:flex;flex-direction:column}.col.content-v-center,.column.content-v-center{justify-content:center}.col.content-center,.column.content-center{align-items:center}.btn{padding:5px;display:inline-block;text-align:center;border-radius:2px;font-size:1rem;font-weight:500;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;border:1px solid;text-decoration:none}.btn:not(.link){background-color:#e7e7e7;padding:.5em 1em}.btn:before{content:"";display:inline-block;vertical-align:middle;height:100%}.btn.primary{background-color:var(--primary-color);color:var(--primary-contrast-color)}.btn.secondary{background-color:var(--secondary-color);color:var(--secondary-contrast-color)}.btn.info{background-color:var(--info-color);color:var(--info-contrast-color)}.btn.success{background-color:var(--success-color);color:var(--success-contrast-color)}.btn.error{background-color:var(--error-color);color:var(--error-contrast-color)}.btn.warning{background-color:var(--warning-color);color:var(--warning-contrast-color)}.btn.link{color:var(--link-color)}.btn.outlined{background-color:transparent}.btn.outlined.primary{color:var(--primary-color);border-color:var(--primary-color)}.btn.outlined.secondary{color:var(--secondary-color);border-color:var(--secondary-color)}.btn.outlined.info{color:var(--info-color);border-color:var(--info-color)}.btn.outlined.success{color:var(--sucess-color);border-color:var(--sucess-color)}.btn.outlined.error{color:var(--error-color);border-color:var(--error-color)}.btn.outlined.warning{color:var(--warning-color);border-color:var(--warning-color)}.btn.small{font-size:.85rem}.btn.x-small{font-size:.7rem}.btn.big{font-size:1.25rem}.btn.x-big{font-size:1.5rem}.btn.rounded{border-radius:20px}.btn.disabled{opacity:.4;cursor:not-allowed}.btns{letter-spacing:-.31em}.btns .btn{margin:0;border-radius:0;border-right:1px solid rgba(0,0,0,.2);letter-spacing:normal}.btns :first-child{border-top-left-radius:2px;border-bottom-left-radius:2px}.btns :last-child{border-top-right-radius:2px;border-bottom-right-radius:2px}h1{font-size:2rem}h2{font-size:1.8rem}h3{font-size:1.6rem}h4{font-size:1.4rem}h5{font-size:1.2rem}h6{font-size:1rem}input{font-size:1rem}.dropdown,.textbox{padding:0;border-radius:2px;border:1px solid var(--input-border-color);width:300px;height:30px;background:inherit}.textbox{display:flex;align-items:center}.textbox input{border:0;padding:0 0 0 7px;height:100%}.textbox input:focus{outline:0}.textbox:focus-within{box-shadow:0 0 0 2px #e7f3ff;border:2px solid var(--input-border-color)}.textbox.primary{border-color:var(--primary-color)}.textbox.primary:focus-within{border-color:var(--primary-color)}.textbox.error{border-color:var(--error-color)}.textbox.error:focus-within{border-color:var(--error-color)}.checkbox{width:20px;height:20px;border:2px solid var(--input-border-color);margin:0;display:flex;justify-content:center;align-items:center;border:1px solid var(--input-border-color)}.checkbox.primary{border-color:var(--primary-color)}.checkbox.secondary{border-color:var(--secondary-color)}.checkbox[checked]::after{content:"\\2714"}.checkbox[checked].primary{background-color:var(--primary-color);color:var(--primary-contrast-color)}.checkbox[checked].secondary{background-color:var(--secondary-color);color:var(--secondary-contrast-color)}.dropdown:focus{outline:0;border:2px solid var(--input-border-color);box-shadow:0 0 0 2px #e7f3ff}.dropdown.primary{border-color:var(--primary-color)}.dropdown.primary:focus{border-color:var(--primary-color)}.dropdown.error{border-color:var(--error-color)}.dropdown.error:focus-within{border-color:var(--error-color)}:root{--primary-color:#f6755e;--secondary-color:#25a2c3;--info-color:#8c9eff;--success-color:#4CAF50;--error-color:#b71c1c;--warning-color:#FFC107;--primary-contrast-color:#fff;--secondary-contrast-color:#fff;--info-contrast-color:#fff;--success-contrast-color:#fff;--error-contrast-color:#fff;--warning-contrast-color:#fff;--link-color:#1867c0;--input-border-color:#dddfe2}.row>*{box-sizing:border-box}.row>[class^=col-]{box-sizing:border-box}.col-1{flex-basis:8.33333%;max-width:8.33333%}.col-2{flex-basis:16.66667%;max-width:16.66667%}.col-3{flex-basis:25%;max-width:25%}.col-4{flex-basis:33.33333%;max-width:33.33333%}.col-5{flex-basis:41.66667%;max-width:41.66667%}.col-6{flex-basis:50%;max-width:50%}.col-7{flex-basis:58.33333%;max-width:58.33333%}.col-8{flex-basis:66.66667%;max-width:66.66667%}.col-9{flex-basis:75%;max-width:75%}.col-10{flex-basis:83.33333%;max-width:83.33333%}.col-11{flex-basis:91.66667%;max-width:91.66667%}.col-12{flex-basis:100%;max-width:100%}@media (min-width:576px){.col-sm-1{flex-basis:8.33333%;max-width:8.33333%}.col-sm-2{flex-basis:16.66667%;max-width:16.66667%}.col-sm-3{flex-basis:25%;max-width:25%}.col-sm-4{flex-basis:33.33333%;max-width:33.33333%}.col-sm-5{flex-basis:41.66667%;max-width:41.66667%}.col-sm-6{flex-basis:50%;max-width:50%}.col-sm-7{flex-basis:58.33333%;max-width:58.33333%}.col-sm-8{flex-basis:66.66667%;max-width:66.66667%}.col-sm-9{flex-basis:75%;max-width:75%}.col-sm-10{flex-basis:83.33333%;max-width:83.33333%}.col-sm-11{flex-basis:91.66667%;max-width:91.66667%}.col-sm-12{flex-basis:100%;max-width:100%}}@media (min-width:768px){.col-md-1{flex-basis:8.33333%;max-width:8.33333%}.col-md-2{flex-basis:16.66667%;max-width:16.66667%}.col-md-3{flex-basis:25%;max-width:25%}.col-md-4{flex-basis:33.33333%;max-width:33.33333%}.col-md-5{flex-basis:41.66667%;max-width:41.66667%}.col-md-6{flex-basis:50%;max-width:50%}.col-md-7{flex-basis:58.33333%;max-width:58.33333%}.col-md-8{flex-basis:66.66667%;max-width:66.66667%}.col-md-9{flex-basis:75%;max-width:75%}.col-md-10{flex-basis:83.33333%;max-width:83.33333%}.col-md-11{flex-basis:91.66667%;max-width:91.66667%}.col-md-12{flex-basis:100%;max-width:100%}}@media (min-width:992px){.col-lg-1{flex-basis:8.33333%;max-width:8.33333%}.col-lg-2{flex-basis:16.66667%;max-width:16.66667%}.col-lg-3{flex-basis:25%;max-width:25%}.col-lg-4{flex-basis:33.33333%;max-width:33.33333%}.col-lg-5{flex-basis:41.66667%;max-width:41.66667%}.col-lg-6{flex-basis:50%;max-width:50%}.col-lg-7{flex-basis:58.33333%;max-width:58.33333%}.col-lg-8{flex-basis:66.66667%;max-width:66.66667%}.col-lg-9{flex-basis:75%;max-width:75%}.col-lg-10{flex-basis:83.33333%;max-width:83.33333%}.col-lg-11{flex-basis:91.66667%;max-width:91.66667%}.col-lg-12{flex-basis:100%;max-width:100%}}@media (min-width:1200px){.col-xl-1{flex-basis:8.33333%;max-width:8.33333%}.col-xl-2{flex-basis:16.66667%;max-width:16.66667%}.col-xl-3{flex-basis:25%;max-width:25%}.col-xl-4{flex-basis:33.33333%;max-width:33.33333%}.col-xl-5{flex-basis:41.66667%;max-width:41.66667%}.col-xl-6{flex-basis:50%;max-width:50%}.col-xl-7{flex-basis:58.33333%;max-width:58.33333%}.col-xl-8{flex-basis:66.66667%;max-width:66.66667%}.col-xl-9{flex-basis:75%;max-width:75%}.col-xl-10{flex-basis:83.33333%;max-width:83.33333%}.col-xl-11{flex-basis:91.66667%;max-width:91.66667%}.col-xl-12{flex-basis:100%;max-width:100%}}@media (min-width:1500px){.col-xxl-1{flex-basis:8.33333%;max-width:8.33333%}.col-xxl-2{flex-basis:16.66667%;max-width:16.66667%}.col-xxl-3{flex-basis:25%;max-width:25%}.col-xxl-4{flex-basis:33.33333%;max-width:33.33333%}.col-xxl-5{flex-basis:41.66667%;max-width:41.66667%}.col-xxl-6{flex-basis:50%;max-width:50%}.col-xxl-7{flex-basis:58.33333%;max-width:58.33333%}.col-xxl-8{flex-basis:66.66667%;max-width:66.66667%}.col-xxl-9{flex-basis:75%;max-width:75%}.col-xxl-10{flex-basis:83.33333%;max-width:83.33333%}.col-xxl-11{flex-basis:91.66667%;max-width:91.66667%}.col-xxl-12{flex-basis:100%;max-width:100%}}.ripple{position:relative;overflow:hidden;transform:translate3d(0,0,0)}.ripple:after{content:"";display:block;position:absolute;width:100%;height:100%;top:0;left:0;pointer-events:none;background-image:radial-gradient(circle,#000 10%,transparent 10.01%);background-repeat:no-repeat;background-position:50%;transform:scale(10,10);opacity:0;transition:transform .5s,opacity 1s}.ripple:active:after{transform:scale(0,0);opacity:.2;transition:0s}.ml-5px{margin-left:5px}.ml-10px{margin-left:10px}.ml-15px{margin-left:15px}.ml-20px{margin-left:20px}.mr-5px{margin-right:5px}.mr-10px{margin-right:10px}.mr-15px{margin-right:15px}.mr-20px{margin-right:20px}.mt-5px{margin-top:5px}.mt-10px{margin-top:10px}.mt-15px{margin-top:15px}.mt-20px{margin-top:20px}.mb-5px{margin-bottom:5px}.mb-10px{margin-bottom:10px}.mb-15px{margin-bottom:15px}.mb-20px{margin-bottom:20px}.pt-5px{padding-top:5px}.pt-10px{padding-top:10px}.pt-15px{padding-top:15px}.pt-20px{padding-top:20px}.pb-5px{padding-bottom:5px}.pb-10px{padding-bottom:10px}.pb-15px{padding-bottom:15px}.pb-20px{padding-bottom:20px}.pl-5px{padding-left:5px}.pl-10px{padding-left:10px}.pl-15px{padding-left:15px}.pl-20px{padding-left:20px}.pr-5px{padding-right:5px}.pr-10px{padding-right:10px}.pr-15px{padding-right:15px}.pr-20px{padding-right:20px}.list>*{font-size:1rem;line-height:2rem}.list.decimal{list-style-type:decimal}.list.disc{list-style-type:disc}.list.square{list-style-type:square}',""])},function(t,e,r){t.exports=r(4)},function(t,e,r){"use strict";var o,n=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var t={};return function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}t[e]=r}return t[e]}}(),s=[];function a(t){for(var e=-1,r=0;r<s.length;r++)if(s[r].identifier===t){e=r;break}return e}function l(t,e){for(var r={},o=[],n=0;n<t.length;n++){var i=t[n],l=e.base?i[0]+e.base:i[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var f=a(d),u={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(s[f].references++,s[f].updater(u)):s.push({identifier:d,updater:h(u,e),references:1}),o.push(d)}return o}function c(t){var e=document.createElement("style"),o=t.attributes||{};if(void 0===o.nonce){var n=r.nc;n&&(o.nonce=n)}if(Object.keys(o).forEach((function(t){e.setAttribute(t,o[t])})),"function"==typeof t.insert)t.insert(e);else{var s=i(t.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(e)}return e}var d,f=(d=[],function(t,e){return d[t]=e,d.filter(Boolean).join("\n")});function u(t,e,r,o){var n=r?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(t.styleSheet)t.styleSheet.cssText=f(e,n);else{var i=document.createTextNode(n),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function p(t,e,r){var o=r.css,n=r.media,i=r.sourceMap;if(n?t.setAttribute("media",n):t.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var m=null,x=0;function h(t,e){var r,o,n;if(e.singleton){var i=x++;r=m||(m=c(e)),o=u.bind(null,r,i,!1),n=u.bind(null,r,i,!0)}else r=c(e),o=p.bind(null,r,e),n=function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(r)};return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else n()}}t.exports=function(t,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=n());var r=l(t=t||[],e);return function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){for(var o=0;o<r.length;o++){var n=a(r[o]);s[n].references--}for(var i=l(t,e),c=0;c<r.length;c++){var d=a(r[c]);0===s[d].references&&(s[d].updater(),s.splice(d,1))}r=i}}}},function(t,e,r){"use strict";r.r(e);var o=r(1),n=(r(5),localStorage.getItem("network"));n=n||"mainnet";var i=document.querySelector("#selectNetwork");i.addEventListener("change",(function(t){localStorage.setItem("network",t.target.value),location.reload()})),i.value=n,new o.Widget({appName:"test",autoShowTime:1,position:"bottom-right",target:"#widget",network:n}).create()},function(t,e,r){t.exports=function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s="./widget/index.ts")}({"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./widget/styles/index.scss":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./widget/styles/index.scss ***!
  \***************************************************************************************************************/
/*! no static exports found */function(t,e,r){(t.exports=r(/*! ../../node_modules/css-loader/dist/runtime/api.js */"./node_modules/css-loader/dist/runtime/api.js")(!1)).push([t.i,'.matic-widget {\n  border: 1px solid #f1eded;\n  position: fixed;\n  transition: transform 1s;\n  background-color: #fff;\n  border-radius: 20px;\n  max-height: 90%;\n  max-width: 80%;\n  z-index: 10000; }\n  .matic-widget.matic-widget--slide-down {\n    transform: translateY(1000px);\n    border-radius: 20px; }\n  .matic-widget.matic-widget--slide-up {\n    transform: translateY(0); }\n  .matic-widget.matic-widget--hide {\n    display: none; }\n  .matic-widget .matic-widget_iframe {\n    width: 100%;\n    height: 100%;\n    border: none; }\n  .matic-widget.center {\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n    top: 0;\n    bottom: 0;\n    margin-top: auto;\n    margin-bottom: auto; }\n  .matic-widget.bottom-right {\n    bottom: 5px;\n    right: 5px; }\n  .matic-widget.bottom-left {\n    bottom: 5px;\n    left: 5px; }\n  .matic-widget.widget-overlay::before {\n    content: "";\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 20px;\n    animation: 0.3s ease 1.87s forwards fade-in; }\n\n@keyframes fade-in {\n  0% {\n    border-radius: 20px; }\n  80% {\n    border-radius: 20px; }\n  100% {\n    border-radius: 0; } }\n',""])},"./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */function(t,e,r){"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r=function(t,e){var r=t[1]||"",o=t[3];if(!o)return r;if(e&&"function"==typeof btoa){var n=(s=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),i=o.sources.map((function(t){return"/*# sourceURL="+o.sourceRoot+t+" */"}));return[r].concat(i).concat([n]).join("\n")}var s;return[r].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+r+"}":r})).join("")},e.i=function(t,r){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},n=0;n<this.length;n++){var i=this[n][0];null!=i&&(o[i]=!0)}for(n=0;n<t.length;n++){var s=t[n];null!=s[0]&&o[s[0]]||(r&&!s[2]?s[2]=r:r&&(s[2]="("+s[2]+") and ("+r+")"),e.push(s))}},e}},"./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */function(t,e,r){var o,n,i={},s=(o=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===n&&(n=o.apply(this,arguments)),n}),a=function(t,e){return e?e.querySelector(t):document.querySelector(t)},l=function(t){var e={};return function(t,r){if("function"==typeof t)return t();if(void 0===e[t]){var o=a.call(this,t,r);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(t){o=null}e[t]=o}return e[t]}}(),c=null,d=0,f=[],u=r(/*! ./urls */"./node_modules/style-loader/lib/urls.js");function p(t,e){for(var r=0;r<t.length;r++){var o=t[r],n=i[o.id];if(n){n.refs++;for(var s=0;s<n.parts.length;s++)n.parts[s](o.parts[s]);for(;s<o.parts.length;s++)n.parts.push(v(o.parts[s],e))}else{var a=[];for(s=0;s<o.parts.length;s++)a.push(v(o.parts[s],e));i[o.id]={id:o.id,refs:1,parts:a}}}}function m(t,e){for(var r=[],o={},n=0;n<t.length;n++){var i=t[n],s=e.base?i[0]+e.base:i[0],a={css:i[1],media:i[2],sourceMap:i[3]};o[s]?o[s].parts.push(a):r.push(o[s]={id:s,parts:[a]})}return r}function x(t,e){var r=l(t.insertInto);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=f[f.length-1];if("top"===t.insertAt)o?o.nextSibling?r.insertBefore(e,o.nextSibling):r.appendChild(e):r.insertBefore(e,r.firstChild),f.push(e);else if("bottom"===t.insertAt)r.appendChild(e);else{if("object"!=typeof t.insertAt||!t.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var n=l(t.insertAt.before,r);r.insertBefore(e,n)}}function h(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=f.indexOf(t);e>=0&&f.splice(e,1)}function b(t){var e=document.createElement("style");if(void 0===t.attrs.type&&(t.attrs.type="text/css"),void 0===t.attrs.nonce){var o=function(){0;return r.nc}();o&&(t.attrs.nonce=o)}return g(e,t.attrs),x(t,e),e}function g(t,e){Object.keys(e).forEach((function(r){t.setAttribute(r,e[r])}))}function v(t,e){var r,o,n,i;if(e.transform&&t.css){if(!(i="function"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=i}if(e.singleton){var s=d++;r=c||(c=b(e)),o=_.bind(null,r,s,!1),n=_.bind(null,r,s,!0)}else t.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(r=function(t){var e=document.createElement("link");return void 0===t.attrs.type&&(t.attrs.type="text/css"),t.attrs.rel="stylesheet",g(e,t.attrs),x(t,e),e}(e),o=k.bind(null,r,e),n=function(){h(r),r.href&&URL.revokeObjectURL(r.href)}):(r=b(e),o=j.bind(null,r),n=function(){h(r)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else n()}}t.exports=function(t,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=s()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var r=m(t,e);return p(r,e),function(t){for(var o=[],n=0;n<r.length;n++){var s=r[n];(a=i[s.id]).refs--,o.push(a)}t&&p(m(t,e),e);for(n=0;n<o.length;n++){var a;if(0===(a=o[n]).refs){for(var l=0;l<a.parts.length;l++)a.parts[l]();delete i[a.id]}}}};var w,y=(w=[],function(t,e){return w[t]=e,w.filter(Boolean).join("\n")});function _(t,e,r,o){var n=r?"":o.css;if(t.styleSheet)t.styleSheet.cssText=y(e,n);else{var i=document.createTextNode(n),s=t.childNodes;s[e]&&t.removeChild(s[e]),s.length?t.insertBefore(i,s[e]):t.appendChild(i)}}function j(t,e){var r=e.css,o=e.media;if(o&&t.setAttribute("media",o),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}function k(t,e,r){var o=r.css,n=r.sourceMap,i=void 0===e.convertToAbsoluteUrls&&n;(e.convertToAbsoluteUrls||i)&&(o=u(o)),n&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */");var s=new Blob([o],{type:"text/css"}),a=t.href;t.href=URL.createObjectURL(s),a&&URL.revokeObjectURL(a)}},"./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */function(t,e){t.exports=function(t){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!t||"string"!=typeof t)return t;var r=e.protocol+"//"+e.host,o=r+e.pathname.replace(/\/[^\/]*$/,"/");return t.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(t,e){var n,i=e.trim().replace(/^"(.*)"$/,(function(t,e){return e})).replace(/^'(.*)'$/,(function(t,e){return e}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?t:(n=0===i.indexOf("//")?i:0===i.indexOf("/")?r+i:o+i.replace(/^\.\//,""),"url("+JSON.stringify(n)+")")}))}},"./src/enums/widget_event.ts":
/*!***********************************!*\
  !*** ./src/enums/widget_event.ts ***!
  \***********************************/
/*! exports provided: WIDGET_EVENT */function(t,e,r){"use strict";var o;r.r(e),r.d(e,"WIDGET_EVENT",(function(){return o})),function(t){t.close="close",t.burnInit="burnInit",t.burnComplete="burnComplete",t.exitInit="exitInit",t.exitError="exitError",t.exitComplete="exitComplete",t.confirmWithdrawInit="confirmWithdrawInit",t.confirmWithdrawComplete="confirmWithdrawComplete",t.confirmWithdrawError="confirmWithdrawError",t.load="load",t.approveInit="approveInit",t.approveComplete="approveComplete",t.approveError="approveError",t.depositInit="depositInit",t.depositComplete="depositComplete",t.depositError="depositError"}(o||(o={}))},"./widget/constants.ts":
/*!*****************************!*\
  !*** ./widget/constants.ts ***!
  \*****************************/
/*! exports provided: appVersion, defaultConfig */function(t,e,r){"use strict";r.r(e),r.d(e,"appVersion",(function(){return o})),r.d(e,"defaultConfig",(function(){return n}));const o="1.0.3",n={autoShowTime:-1,height:618,newTabForMobile:!1,width:540,position:"",appName:"",relativePath:"",assetsFromWidgetServer:!0,overlay:!1,style:{}}},"./widget/index.ts":
/*!*************************!*\
  !*** ./widget/index.ts ***!
  \*************************/
/*! exports provided: Widget */function(t,e,r){"use strict";r.r(e),r.d(e,"Widget",(function(){return a}));var o=r(/*! ./constants */"./widget/constants.ts"),n=r(/*! ../src/enums/widget_event */"./src/enums/widget_event.ts"),i=(r(/*! ./styles/index.scss */"./widget/styles/index.scss"),r(/*! ./utils */"./widget/utils/index.ts")),s=function(t,e,r,o){return new(r||(r=Promise))((function(n,i){function s(t){try{l(o.next(t))}catch(t){i(t)}}function a(t){try{l(o.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(s,a)}l((o=o.apply(t,e||[])).next())}))};class a{constructor(t){if(this._eventBus=new i.EventBus,this.isVisible=!1,!t.network)throw"{Matic Widget Error} : network is not specified. Please specify network type.";this._config=Object.assign(Object.assign({},o.defaultConfig),t)}loadAssets(t){return s(this,void 0,void 0,(function*(){const e=t.map(t=>Object(i.loadScript)(t));return Promise.all(e)}))}getAssets(){return s(this,void 0,void 0,(function*(){const t=a.assetsUrl+"manifest.js";return yield Object(i.loadScript)(t),polygonWidgetManifest}))}create(){return s(this,void 0,void 0,(function*(){const t=this._config;if(t.assetsFromWidgetServer){const t=(yield this.getAssets()).map(t=>`${a.assetsUrl}${t}`);yield this.loadAssets(t)}if(t.target){const e=document.querySelectorAll(t.target);if(0==e.length)throw"{Matic Widget Error} : invalid target supplied. Please provide a valid element selector.";e.forEach(t=>{t.onclick=()=>{this.show()}})}const e=document.createElement("div");this._el=e,e.style.cssText=`height:${t.height}px;width:${t.width}px;`,e.className=`matic-widget ${t.position} matic-widget--hide`;const r=t.style;for(const t in r)e.style[t]=r[t];t.overlay&&(e.className+=" widget-overlay");const o=document.createElement("matic-widget");o.className="matic-widget_iframe",o.setAttribute("appid",t.appName),o.setAttribute("page",t.page),o.setAttribute("amount",t.amount),o.setAttribute("network",t.network),e.appendChild(o),document.body.appendChild(e),this._onMessageFromWidget=t=>{const e=t.detail;if(e)switch(this._eventBus.emit(e.name,e.payload),e.name){case n.WIDGET_EVENT.close:this.hide()}},o.addEventListener("message",this._onMessageFromWidget),t.autoShowTime&&setTimeout(()=>{this.show()},t.autoShowTime)}))}show(){this.isVisible||(this._el.classList.add("matic-widget--slide-down"),this._el.classList.remove("matic-widget--hide"),setTimeout(()=>{Object(i.addAnimation)(this._el,"matic-widget--slide-up").then(t=>{this._el.classList.remove("matic-widget--slide-down"),this._eventBus.emit("show")})},100),this.isVisible=!0)}hide(){this.isVisible&&(Object(i.addAnimation)(this._el,"matic-widget--slide-down").then(t=>{this._eventBus.emit("hide"),this._el.classList.add("matic-widget--hide")}),this.isVisible=!1)}on(t,e){return this._eventBus.on(t,e),this}off(t,e){this._eventBus.off(t,e)}destroy(){const t=this._el;if(!t)return;const e=t.querySelector("matic-widget");null==e||e.removeEventListener("message",this._onMessageFromWidget),document.body.removeChild(t)}}a.assetsUrl="https://wallet-asset.matic.network/widget/"},"./widget/styles/index.scss":
/*!**********************************!*\
  !*** ./widget/styles/index.scss ***!
  \**********************************/
/*! no static exports found */function(t,e,r){var o=r(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./index.scss */"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./widget/styles/index.scss");"string"==typeof o&&(o=[[t.i,o,""]]);var n={hmr:!0,transform:void 0,insertInto:void 0};r(/*! ../../node_modules/style-loader/lib/addStyles.js */"./node_modules/style-loader/lib/addStyles.js")(o,n);o.locals&&(t.exports=o.locals)},"./widget/utils/animate_css.ts":
/*!*************************************!*\
  !*** ./widget/utils/animate_css.ts ***!
  \*************************************/
/*! exports provided: addAnimation */function(t,e,r){"use strict";function o(t,e){const r="string"==typeof t?document.querySelector(t):t;return new Promise(t=>{r.classList.add(e),r.addEventListener("transitionend",(function o(){r.classList.remove(e),r.removeEventListener("transitionend",o),t()}))})}r.r(e),r.d(e,"addAnimation",(function(){return o}))},"./widget/utils/event_bus.ts":
/*!***********************************!*\
  !*** ./widget/utils/event_bus.ts ***!
  \***********************************/
/*! exports provided: EventBus */function(t,e,r){"use strict";r.r(e),r.d(e,"EventBus",(function(){return o}));class o{constructor(){this._events={}}on(t,e){this._events[t]||(this._events[t]=[]),this._events[t].push(e)}off(t,e){if(e){const r=this._events[t].findIndex(t=>t===e);r>=0&&this._events[t].splice(r,1)}else this._events[t]=null}emit(t,...e){const r=this._events[t];r&&r.forEach(t=>{t(e)})}}},"./widget/utils/index.ts":
/*!*******************************!*\
  !*** ./widget/utils/index.ts ***!
  \*******************************/
/*! exports provided: EventBus, addAnimation, removeLastSlash, loadScript */function(t,e,r){"use strict";r.r(e);var o=r(/*! ./event_bus */"./widget/utils/event_bus.ts");r.d(e,"EventBus",(function(){return o.EventBus}));var n=r(/*! ./animate_css */"./widget/utils/animate_css.ts");r.d(e,"addAnimation",(function(){return n.addAnimation}));var i=r(/*! ./remove_last_slash */"./widget/utils/remove_last_slash.ts");r.d(e,"removeLastSlash",(function(){return i.removeLastSlash}));var s=r(/*! ./load_script */"./widget/utils/load_script.ts");r.d(e,"loadScript",(function(){return s.loadScript}))},"./widget/utils/load_script.ts":
/*!*************************************!*\
  !*** ./widget/utils/load_script.ts ***!
  \*************************************/
/*! exports provided: loadScript */function(t,e,r){"use strict";r.r(e),r.d(e,"loadScript",(function(){return o}));const o=t=>{const e=document.createElement("script");return e.src=t,document.body.appendChild(e),new Promise((t,r)=>{e.onload=t,e.onerror=r})}},"./widget/utils/remove_last_slash.ts":
/*!*******************************************!*\
  !*** ./widget/utils/remove_last_slash.ts ***!
  \*******************************************/
/*! exports provided: removeLastSlash */function(t,e,r){"use strict";r.r(e),r.d(e,"removeLastSlash",(function(){return o}));const o=t=>{const e=t.length-1;return"/"===t[e]&&(t=t.substr(e)),t}}})},function(t,e,r){t.exports=r(6)},function(t,e,r){"use strict";r.r(e);var o=r(2),n=r.n(o),i=r(0),s=r.n(i),a={insert:"head",singleton:!1};n()(s.a,a);e.default=s.a.locals||{}},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var r=function(t,e){var r=t[1]||"",o=t[3];if(!o)return r;if(e&&"function"==typeof btoa){var n=(s=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),i=o.sources.map((function(t){return"/*# sourceURL="+o.sourceRoot+t+" */"}));return[r].concat(i).concat([n]).join("\n")}var s;return[r].join("\n")}(e,t);return e[2]?"@media "+e[2]+"{"+r+"}":r})).join("")},e.i=function(t,r){"string"==typeof t&&(t=[[null,t,""]]);for(var o={},n=0;n<this.length;n++){var i=this[n][0];"number"==typeof i&&(o[i]=!0)}for(n=0;n<t.length;n++){var s=t[n];"number"==typeof s[0]&&o[s[0]]||(r&&!s[2]?s[2]=r:r&&(s[2]="("+s[2]+") and ("+r+")"),e.push(s))}},e}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZsZXhzdHlsZS9kaXN0L2xpYi5taW4uY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AbWF0aWNuZXR3b3JrL3dhbGxldC13aWRnZXQvZGlzdC9ucG0uZXhwb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BtYXRpY25ldHdvcmsvd2FsbGV0LXdpZGdldC9kaXN0L3dpZGdldC5jb21tb25qczIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZsZXhzdHlsZS9kaXN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mbGV4c3R5bGUvZGlzdC9saWIubWluLmNzcz9kZDE1Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInB1c2giLCJtZW1vIiwiaXNPbGRJRSIsIkJvb2xlYW4iLCJ3aW5kb3ciLCJkb2N1bWVudCIsImFsbCIsImF0b2IiLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJsZW5ndGgiLCJtb2R1bGVzVG9Eb20iLCJsaXN0Iiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsIml0ZW0iLCJpZCIsImJhc2UiLCJjb3VudCIsImNvbmNhdCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZFN0eWxlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGUiLCJjcmVhdGVFbGVtZW50IiwiYXR0cmlidXRlcyIsIm5vbmNlIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsImpvaW4iLCJhcHBseVRvU2luZ2xldG9uVGFnIiwicmVtb3ZlIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjc3NOb2RlIiwiY3JlYXRlVGV4dE5vZGUiLCJjaGlsZE5vZGVzIiwicmVtb3ZlQ2hpbGQiLCJpbnNlcnRCZWZvcmUiLCJhcHBseVRvVGFnIiwicmVtb3ZlQXR0cmlidXRlIiwiYnRvYSIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImZpcnN0Q2hpbGQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsInBhcmVudE5vZGUiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJuZXdPYmoiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwidG9TdHJpbmciLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsInNwbGljZSIsInNhdmVkTmV0d29yayIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJlbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzZXRJdGVtIiwibG9jYXRpb24iLCJyZWxvYWQiLCJhcHBOYW1lIiwiYXV0b1Nob3dUaW1lIiwicG9zaXRpb24iLCJuZXR3b3JrIiwidXNlU291cmNlTWFwIiwidGhpcyIsIm1hcCIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImZuIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJwYXJlbnQiLCJnZXRFbGVtZW50Iiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsInBhcnQiLCJpbnNlcnRJbnRvIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiYmVmb3JlIiwiaWR4IiwiaW5kZXhPZiIsImNyZWF0ZVN0eWxlRWxlbWVudCIsInVuZGVmaW5lZCIsImF0dHJzIiwidHlwZSIsIm5jIiwiZ2V0Tm9uY2UiLCJhZGRBdHRycyIsInRyYW5zZm9ybSIsImRlZmF1bHQiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwibGluayIsInJlbCIsImNyZWF0ZUxpbmtFbGVtZW50IiwidXBkYXRlTGluayIsImhyZWYiLCJERUJVRyIsIm1heVJlbW92ZSIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwiYmxvYiIsIm9sZFNyYyIsImJhc2VVcmwiLCJwcm90b2NvbCIsImhvc3QiLCJjdXJyZW50RGlyIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsIm5ld1VybCIsInVucXVvdGVkT3JpZ1VybCIsInRyaW0iLCIkMSIsInRlc3QiLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiV0lER0VUX0VWRU5UIiwiYXBwVmVyc2lvbiIsImRlZmF1bHRDb25maWciLCJoZWlnaHQiLCJuZXdUYWJGb3JNb2JpbGUiLCJ3aWR0aCIsInJlbGF0aXZlUGF0aCIsImFzc2V0c0Zyb21XaWRnZXRTZXJ2ZXIiLCJvdmVybGF5IiwiV2lkZ2V0IiwiX2NvbnN0YW50c19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwiX3NyY19lbnVtc193aWRnZXRfZXZlbnRfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl91dGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fIiwiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsInJlamVjdGVkIiwiZG9uZSIsInRoZW4iLCJjb25maWciLCJfZXZlbnRCdXMiLCJpc1Zpc2libGUiLCJfY29uZmlnIiwiYXNzaWduIiwic3JjTGlzdCIsInByb21pc2VzIiwic3JjIiwibWFuaWZlc3RQYXRoIiwiYXNzZXRzVXJsIiwicG9seWdvbldpZGdldE1hbmlmZXN0IiwiZ2V0QXNzZXRzIiwiYXNzZXQiLCJsb2FkQXNzZXRzIiwiZWxzIiwicXVlcnlTZWxlY3RvckFsbCIsIm9uY2xpY2siLCJzaG93IiwiX2VsIiwiY2xhc3NOYW1lIiwiY29uZmlnU3R5bGUiLCJ3aWRnZXRFbCIsInBhZ2UiLCJhbW91bnQiLCJib2R5IiwiX29uTWVzc2FnZUZyb21XaWRnZXQiLCJldiIsImRldGFpbCIsImVtaXQiLCJwYXlsb2FkIiwiY2xvc2UiLCJoaWRlIiwic2V0VGltZW91dCIsImNsYXNzTGlzdCIsImFkZCIsIl8iLCJldmVudCIsImNhbGxiYWNrIiwib24iLCJvZmYiLCJ3aWRnZXQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwibG9jYWxzIiwiYWRkQW5pbWF0aW9uIiwiZWxlbWVudCIsImFuaW1hdGlvbk5hbWUiLCJub2RlIiwicmVzIiwiaGFuZGxlQW5pbWF0aW9uRW5kIiwiRXZlbnRCdXMiLCJfZXZlbnRzIiwiZXZlbnROYW1lIiwiZmluZEluZGV4IiwicSIsImFyZ3MiLCJldmVudHMiLCJfZXZlbnRfYnVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX18iLCJfYW5pbWF0ZV9jc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyIsIl9yZW1vdmVfbGFzdF9zbGFzaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fIiwiX2xvYWRfc2NyaXB0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18iLCJsb2FkU2NyaXB0Iiwic2NyaXB0IiwicmVqIiwib25sb2FkIiwib25lcnJvciIsInJlbW92ZUxhc3RTbGFzaCIsInVybCIsImxhc3RJbmRleCIsInN1YnN0ciJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixF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IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAzKTtcbiIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJhLGFiYnIsYWNyb255bSxhZGRyZXNzLGFwcGxldCxhcnRpY2xlLGFzaWRlLGF1ZGlvLGIsYmlnLGJsb2NrcXVvdGUsYm9keSxjYW52YXMsY2FwdGlvbixjZW50ZXIsY2l0ZSxjb2RlLGRkLGRlbCxkZXRhaWxzLGRmbixkaXYsZGwsZHQsZW0sZW1iZWQsZmllbGRzZXQsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGZvcm0saDEsaDIsaDMsaDQsaDUsaDYsaGVhZGVyLGhncm91cCxodG1sLGksaWZyYW1lLGltZyxpbnMsa2JkLGxhYmVsLGxlZ2VuZCxsaSxtYXJrLG1lbnUsbmF2LG9iamVjdCxvbCxvdXRwdXQscCxwcmUscSxydWJ5LHMsc2FtcCxzZWN0aW9uLHNtYWxsLHNwYW4sc3RyaWtlLHN0cm9uZyxzdWIsc3VtbWFyeSxzdXAsdGFibGUsdGJvZHksdGQsdGZvb3QsdGgsdGhlYWQsdGltZSx0cix0dCx1LHVsLHZhcix2aWRlb3ttYXJnaW46MDtwYWRkaW5nOjA7Ym9yZGVyOjA7Zm9udC1zaXplOjEwMCU7Zm9udDppbmhlcml0O3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfWFydGljbGUsYXNpZGUsZGV0YWlscyxmaWdjYXB0aW9uLGZpZ3VyZSxmb290ZXIsaGVhZGVyLGhncm91cCxtZW51LG5hdixzZWN0aW9ue2Rpc3BsYXk6YmxvY2t9Ym9keXtsaW5lLWhlaWdodDoxfWJsb2NrcXVvdGUscXtxdW90ZXM6bm9uZX1ibG9ja3F1b3RlOmFmdGVyLGJsb2NrcXVvdGU6YmVmb3JlLHE6YWZ0ZXIscTpiZWZvcmV7Y29udGVudDonJztjb250ZW50Om5vbmV9dGFibGV7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO2JvcmRlci1zcGFjaW5nOjB9OnJvb3R7LS1wcmltYXJ5LWNvbG9yOiNmNjc1NWU7LS1zZWNvbmRhcnktY29sb3I6IzI1YTJjMzstLWluZm8tY29sb3I6IzhjOWVmZjstLXN1Y2Nlc3MtY29sb3I6IzRDQUY1MDstLWVycm9yLWNvbG9yOiNiNzFjMWM7LS13YXJuaW5nLWNvbG9yOiNGRkMxMDc7LS1wcmltYXJ5LWNvbnRyYXN0LWNvbG9yOiNmZmY7LS1zZWNvbmRhcnktY29udHJhc3QtY29sb3I6I2ZmZjstLWluZm8tY29udHJhc3QtY29sb3I6I2ZmZjstLXN1Y2Nlc3MtY29udHJhc3QtY29sb3I6I2ZmZjstLWVycm9yLWNvbnRyYXN0LWNvbG9yOiNmZmY7LS13YXJuaW5nLWNvbnRyYXN0LWNvbG9yOiNmZmY7LS1saW5rLWNvbG9yOiMxODY3YzA7LS1pbnB1dC1ib3JkZXItY29sb3I6I2RkZGZlMn0uY2VudGVye21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG99LmJvcmRlcntib3JkZXI6MXB4IHNvbGlkICMwMDB9LmJsb2Nre2Rpc3BsYXk6YmxvY2t9LndpZHRoLWZ1bGx7d2lkdGg6MTAwJX0udGV4dC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXJ9LnRleHQtcmlnaHR7dGV4dC1hbGlnbjpyaWdodH0udGV4dC1wcmltYXJ5e2NvbG9yOnZhcigtLXByaW1hcnktY29sb3IpfS50ZXh0LXNlY29uZGFyeXtjb2xvcjp2YXIoLS1zZWNvbmRhcnktY29sb3IpfS50ZXh0LWluZm97Y29sb3I6dmFyKC0taW5mby1jb2xvcil9LnRleHQtZXJyb3J7Y29sb3I6dmFyKC0tZXJyb3ItY29sb3IpfS50ZXh0LXdhcm5pbmd7Y29sb3I6dmFyKC0td2FybmluZy1jb2xvcil9LnRleHQtc3VjY2Vzc3tjb2xvcjp2YXIoLS1zdWNjZXNzLWNvbG9yKX0ucXVvdGU6YWZ0ZXIsLnF1b3RlOmJlZm9yZXtjb250ZW50OlxcXCJcXFxcMjAxQ1xcXCI7Zm9udC1mYW1pbHk6U2FuY2hlen0uaGlnaGxpZ2h0e3Bvc2l0aW9uOnJlbGF0aXZlO3BhZGRpbmctbGVmdDoxZW07Ym9yZGVyLWxlZnQ6LjJlbSBzb2xpZDtmb250LXNpemU6MS40ZW07bGluZS1oZWlnaHQ6MS41ZW07Zm9udC13ZWlnaHQ6MTAwfS5oaWdobGlnaHQucHJpbWFyeXtib3JkZXItbGVmdC1jb2xvcjp2YXIoLS1wcmltYXJ5LWNvbG9yKX0uaGlnaGxpZ2h0LnNlY29uZGFyeXtib3JkZXItbGVmdC1jb2xvcjp2YXIoLS1zZWNvbmRhcnktY29sb3IpfS5oaWdobGlnaHQuaW5mb3tib3JkZXItbGVmdC1jb2xvcjp2YXIoLS1pbmZvLWNvbG9yKX0uaGlnaGxpZ2h0LmVycm9ye2JvcmRlci1sZWZ0LWNvbG9yOnZhcigtLWVycm9yLWNvbG9yKX0uaGlnaGxpZ2h0Lndhcm5pbmd7Ym9yZGVyLWxlZnQtY29sb3I6dmFyKC0td2FybmluZy1jb2xvcil9LmhpZ2hsaWdodC5zdWNjZXNze2JvcmRlci1sZWZ0LWNvbG9yOnZhcigtLXN1Y2Nlc3MtY29sb3IpfS5yb3d7ZGlzcGxheTpmbGV4fS5yb3c6bm90KC5uby13cmFwKXtmbGV4LXdyYXA6d3JhcH0ucm93LmNvbnRlbnQtY2VudGVye2p1c3RpZnktY29udGVudDpjZW50ZXJ9LnJvdy5jb250ZW50LXYtY2VudGVye2FsaWduLWl0ZW1zOmNlbnRlcn0uY29sLC5jb2x1bW57ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0uY29sLmNvbnRlbnQtdi1jZW50ZXIsLmNvbHVtbi5jb250ZW50LXYtY2VudGVye2p1c3RpZnktY29udGVudDpjZW50ZXJ9LmNvbC5jb250ZW50LWNlbnRlciwuY29sdW1uLmNvbnRlbnQtY2VudGVye2FsaWduLWl0ZW1zOmNlbnRlcn0uYnRue3BhZGRpbmc6NXB4O2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RleHQtYWxpZ246Y2VudGVyO2JvcmRlci1yYWRpdXM6MnB4O2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjUwMDtjdXJzb3I6cG9pbnRlcjstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO2JvcmRlcjoxcHggc29saWQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmJ0bjpub3QoLmxpbmspe2JhY2tncm91bmQtY29sb3I6I2U3ZTdlNztwYWRkaW5nOi41ZW0gMWVtfS5idG46YmVmb3Jle2NvbnRlbnQ6XFxcIlxcXCI7ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246bWlkZGxlO2hlaWdodDoxMDAlfS5idG4ucHJpbWFyeXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXByaW1hcnktY29sb3IpO2NvbG9yOnZhcigtLXByaW1hcnktY29udHJhc3QtY29sb3IpfS5idG4uc2Vjb25kYXJ5e2JhY2tncm91bmQtY29sb3I6dmFyKC0tc2Vjb25kYXJ5LWNvbG9yKTtjb2xvcjp2YXIoLS1zZWNvbmRhcnktY29udHJhc3QtY29sb3IpfS5idG4uaW5mb3tiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWluZm8tY29sb3IpO2NvbG9yOnZhcigtLWluZm8tY29udHJhc3QtY29sb3IpfS5idG4uc3VjY2Vzc3tiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXN1Y2Nlc3MtY29sb3IpO2NvbG9yOnZhcigtLXN1Y2Nlc3MtY29udHJhc3QtY29sb3IpfS5idG4uZXJyb3J7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1lcnJvci1jb2xvcik7Y29sb3I6dmFyKC0tZXJyb3ItY29udHJhc3QtY29sb3IpfS5idG4ud2FybmluZ3tiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXdhcm5pbmctY29sb3IpO2NvbG9yOnZhcigtLXdhcm5pbmctY29udHJhc3QtY29sb3IpfS5idG4ubGlua3tjb2xvcjp2YXIoLS1saW5rLWNvbG9yKX0uYnRuLm91dGxpbmVke2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi5vdXRsaW5lZC5wcmltYXJ5e2NvbG9yOnZhcigtLXByaW1hcnktY29sb3IpO2JvcmRlci1jb2xvcjp2YXIoLS1wcmltYXJ5LWNvbG9yKX0uYnRuLm91dGxpbmVkLnNlY29uZGFyeXtjb2xvcjp2YXIoLS1zZWNvbmRhcnktY29sb3IpO2JvcmRlci1jb2xvcjp2YXIoLS1zZWNvbmRhcnktY29sb3IpfS5idG4ub3V0bGluZWQuaW5mb3tjb2xvcjp2YXIoLS1pbmZvLWNvbG9yKTtib3JkZXItY29sb3I6dmFyKC0taW5mby1jb2xvcil9LmJ0bi5vdXRsaW5lZC5zdWNjZXNze2NvbG9yOnZhcigtLXN1Y2Vzcy1jb2xvcik7Ym9yZGVyLWNvbG9yOnZhcigtLXN1Y2Vzcy1jb2xvcil9LmJ0bi5vdXRsaW5lZC5lcnJvcntjb2xvcjp2YXIoLS1lcnJvci1jb2xvcik7Ym9yZGVyLWNvbG9yOnZhcigtLWVycm9yLWNvbG9yKX0uYnRuLm91dGxpbmVkLndhcm5pbmd7Y29sb3I6dmFyKC0td2FybmluZy1jb2xvcik7Ym9yZGVyLWNvbG9yOnZhcigtLXdhcm5pbmctY29sb3IpfS5idG4uc21hbGx7Zm9udC1zaXplOi44NXJlbX0uYnRuLngtc21hbGx7Zm9udC1zaXplOi43cmVtfS5idG4uYmlne2ZvbnQtc2l6ZToxLjI1cmVtfS5idG4ueC1iaWd7Zm9udC1zaXplOjEuNXJlbX0uYnRuLnJvdW5kZWR7Ym9yZGVyLXJhZGl1czoyMHB4fS5idG4uZGlzYWJsZWR7b3BhY2l0eTouNDtjdXJzb3I6bm90LWFsbG93ZWR9LmJ0bnN7bGV0dGVyLXNwYWNpbmc6LS4zMWVtfS5idG5zIC5idG57bWFyZ2luOjA7Ym9yZGVyLXJhZGl1czowO2JvcmRlci1yaWdodDoxcHggc29saWQgcmdiYSgwLDAsMCwuMik7bGV0dGVyLXNwYWNpbmc6bm9ybWFsfS5idG5zIDpmaXJzdC1jaGlsZHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjJweDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjJweH0uYnRucyA6bGFzdC1jaGlsZHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czoycHg7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MnB4fWgxe2ZvbnQtc2l6ZToycmVtfWgye2ZvbnQtc2l6ZToxLjhyZW19aDN7Zm9udC1zaXplOjEuNnJlbX1oNHtmb250LXNpemU6MS40cmVtfWg1e2ZvbnQtc2l6ZToxLjJyZW19aDZ7Zm9udC1zaXplOjFyZW19aW5wdXR7Zm9udC1zaXplOjFyZW19LmRyb3Bkb3duLC50ZXh0Ym94e3BhZGRpbmc6MDtib3JkZXItcmFkaXVzOjJweDtib3JkZXI6MXB4IHNvbGlkIHZhcigtLWlucHV0LWJvcmRlci1jb2xvcik7d2lkdGg6MzAwcHg7aGVpZ2h0OjMwcHg7YmFja2dyb3VuZDppbmhlcml0fS50ZXh0Ym94e2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXJ9LnRleHRib3ggaW5wdXR7Ym9yZGVyOjA7cGFkZGluZzowIDAgMCA3cHg7aGVpZ2h0OjEwMCV9LnRleHRib3ggaW5wdXQ6Zm9jdXN7b3V0bGluZTowfS50ZXh0Ym94OmZvY3VzLXdpdGhpbntib3gtc2hhZG93OjAgMCAwIDJweCAjZTdmM2ZmO2JvcmRlcjoycHggc29saWQgdmFyKC0taW5wdXQtYm9yZGVyLWNvbG9yKX0udGV4dGJveC5wcmltYXJ5e2JvcmRlci1jb2xvcjp2YXIoLS1wcmltYXJ5LWNvbG9yKX0udGV4dGJveC5wcmltYXJ5OmZvY3VzLXdpdGhpbntib3JkZXItY29sb3I6dmFyKC0tcHJpbWFyeS1jb2xvcil9LnRleHRib3guZXJyb3J7Ym9yZGVyLWNvbG9yOnZhcigtLWVycm9yLWNvbG9yKX0udGV4dGJveC5lcnJvcjpmb2N1cy13aXRoaW57Ym9yZGVyLWNvbG9yOnZhcigtLWVycm9yLWNvbG9yKX0uY2hlY2tib3h7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtib3JkZXI6MnB4IHNvbGlkIHZhcigtLWlucHV0LWJvcmRlci1jb2xvcik7bWFyZ2luOjA7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2JvcmRlcjoxcHggc29saWQgdmFyKC0taW5wdXQtYm9yZGVyLWNvbG9yKX0uY2hlY2tib3gucHJpbWFyeXtib3JkZXItY29sb3I6dmFyKC0tcHJpbWFyeS1jb2xvcil9LmNoZWNrYm94LnNlY29uZGFyeXtib3JkZXItY29sb3I6dmFyKC0tc2Vjb25kYXJ5LWNvbG9yKX0uY2hlY2tib3hbY2hlY2tlZF06OmFmdGVye2NvbnRlbnQ6XFxcIlxcXFwyNzE0XFxcIn0uY2hlY2tib3hbY2hlY2tlZF0ucHJpbWFyeXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXByaW1hcnktY29sb3IpO2NvbG9yOnZhcigtLXByaW1hcnktY29udHJhc3QtY29sb3IpfS5jaGVja2JveFtjaGVja2VkXS5zZWNvbmRhcnl7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1zZWNvbmRhcnktY29sb3IpO2NvbG9yOnZhcigtLXNlY29uZGFyeS1jb250cmFzdC1jb2xvcil9LmRyb3Bkb3duOmZvY3Vze291dGxpbmU6MDtib3JkZXI6MnB4IHNvbGlkIHZhcigtLWlucHV0LWJvcmRlci1jb2xvcik7Ym94LXNoYWRvdzowIDAgMCAycHggI2U3ZjNmZn0uZHJvcGRvd24ucHJpbWFyeXtib3JkZXItY29sb3I6dmFyKC0tcHJpbWFyeS1jb2xvcil9LmRyb3Bkb3duLnByaW1hcnk6Zm9jdXN7Ym9yZGVyLWNvbG9yOnZhcigtLXByaW1hcnktY29sb3IpfS5kcm9wZG93bi5lcnJvcntib3JkZXItY29sb3I6dmFyKC0tZXJyb3ItY29sb3IpfS5kcm9wZG93bi5lcnJvcjpmb2N1cy13aXRoaW57Ym9yZGVyLWNvbG9yOnZhcigtLWVycm9yLWNvbG9yKX06cm9vdHstLXByaW1hcnktY29sb3I6I2Y2NzU1ZTstLXNlY29uZGFyeS1jb2xvcjojMjVhMmMzOy0taW5mby1jb2xvcjojOGM5ZWZmOy0tc3VjY2Vzcy1jb2xvcjojNENBRjUwOy0tZXJyb3ItY29sb3I6I2I3MWMxYzstLXdhcm5pbmctY29sb3I6I0ZGQzEwNzstLXByaW1hcnktY29udHJhc3QtY29sb3I6I2ZmZjstLXNlY29uZGFyeS1jb250cmFzdC1jb2xvcjojZmZmOy0taW5mby1jb250cmFzdC1jb2xvcjojZmZmOy0tc3VjY2Vzcy1jb250cmFzdC1jb2xvcjojZmZmOy0tZXJyb3ItY29udHJhc3QtY29sb3I6I2ZmZjstLXdhcm5pbmctY29udHJhc3QtY29sb3I6I2ZmZjstLWxpbmstY29sb3I6IzE4NjdjMDstLWlucHV0LWJvcmRlci1jb2xvcjojZGRkZmUyfS5yb3c+Kntib3gtc2l6aW5nOmJvcmRlci1ib3h9LnJvdz5bY2xhc3NePWNvbC1de2JveC1zaXppbmc6Ym9yZGVyLWJveH0uY29sLTF7ZmxleC1iYXNpczo4LjMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMyV9LmNvbC0ye2ZsZXgtYmFzaXM6MTYuNjY2NjclO21heC13aWR0aDoxNi42NjY2NyV9LmNvbC0ze2ZsZXgtYmFzaXM6MjUlO21heC13aWR0aDoyNSV9LmNvbC00e2ZsZXgtYmFzaXM6MzMuMzMzMzMlO21heC13aWR0aDozMy4zMzMzMyV9LmNvbC01e2ZsZXgtYmFzaXM6NDEuNjY2NjclO21heC13aWR0aDo0MS42NjY2NyV9LmNvbC02e2ZsZXgtYmFzaXM6NTAlO21heC13aWR0aDo1MCV9LmNvbC03e2ZsZXgtYmFzaXM6NTguMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMyV9LmNvbC04e2ZsZXgtYmFzaXM6NjYuNjY2NjclO21heC13aWR0aDo2Ni42NjY2NyV9LmNvbC05e2ZsZXgtYmFzaXM6NzUlO21heC13aWR0aDo3NSV9LmNvbC0xMHtmbGV4LWJhc2lzOjgzLjMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMlfS5jb2wtMTF7ZmxleC1iYXNpczo5MS42NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY3JX0uY29sLTEye2ZsZXgtYmFzaXM6MTAwJTttYXgtd2lkdGg6MTAwJX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmNvbC1zbS0xe2ZsZXgtYmFzaXM6OC4zMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMlfS5jb2wtc20tMntmbGV4LWJhc2lzOjE2LjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjclfS5jb2wtc20tM3tmbGV4LWJhc2lzOjI1JTttYXgtd2lkdGg6MjUlfS5jb2wtc20tNHtmbGV4LWJhc2lzOjMzLjMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMlfS5jb2wtc20tNXtmbGV4LWJhc2lzOjQxLjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjclfS5jb2wtc20tNntmbGV4LWJhc2lzOjUwJTttYXgtd2lkdGg6NTAlfS5jb2wtc20tN3tmbGV4LWJhc2lzOjU4LjMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMlfS5jb2wtc20tOHtmbGV4LWJhc2lzOjY2LjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjclfS5jb2wtc20tOXtmbGV4LWJhc2lzOjc1JTttYXgtd2lkdGg6NzUlfS5jb2wtc20tMTB7ZmxleC1iYXNpczo4My4zMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzJX0uY29sLXNtLTExe2ZsZXgtYmFzaXM6OTEuNjY2NjclO21heC13aWR0aDo5MS42NjY2NyV9LmNvbC1zbS0xMntmbGV4LWJhc2lzOjEwMCU7bWF4LXdpZHRoOjEwMCV9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsuY29sLW1kLTF7ZmxleC1iYXNpczo4LjMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMyV9LmNvbC1tZC0ye2ZsZXgtYmFzaXM6MTYuNjY2NjclO21heC13aWR0aDoxNi42NjY2NyV9LmNvbC1tZC0ze2ZsZXgtYmFzaXM6MjUlO21heC13aWR0aDoyNSV9LmNvbC1tZC00e2ZsZXgtYmFzaXM6MzMuMzMzMzMlO21heC13aWR0aDozMy4zMzMzMyV9LmNvbC1tZC01e2ZsZXgtYmFzaXM6NDEuNjY2NjclO21heC13aWR0aDo0MS42NjY2NyV9LmNvbC1tZC02e2ZsZXgtYmFzaXM6NTAlO21heC13aWR0aDo1MCV9LmNvbC1tZC03e2ZsZXgtYmFzaXM6NTguMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMyV9LmNvbC1tZC04e2ZsZXgtYmFzaXM6NjYuNjY2NjclO21heC13aWR0aDo2Ni42NjY2NyV9LmNvbC1tZC05e2ZsZXgtYmFzaXM6NzUlO21heC13aWR0aDo3NSV9LmNvbC1tZC0xMHtmbGV4LWJhc2lzOjgzLjMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMlfS5jb2wtbWQtMTF7ZmxleC1iYXNpczo5MS42NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY3JX0uY29sLW1kLTEye2ZsZXgtYmFzaXM6MTAwJTttYXgtd2lkdGg6MTAwJX19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5jb2wtbGctMXtmbGV4LWJhc2lzOjguMzMzMzMlO21heC13aWR0aDo4LjMzMzMzJX0uY29sLWxnLTJ7ZmxleC1iYXNpczoxNi42NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY3JX0uY29sLWxnLTN7ZmxleC1iYXNpczoyNSU7bWF4LXdpZHRoOjI1JX0uY29sLWxnLTR7ZmxleC1iYXNpczozMy4zMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzJX0uY29sLWxnLTV7ZmxleC1iYXNpczo0MS42NjY2NyU7bWF4LXdpZHRoOjQxLjY2NjY3JX0uY29sLWxnLTZ7ZmxleC1iYXNpczo1MCU7bWF4LXdpZHRoOjUwJX0uY29sLWxnLTd7ZmxleC1iYXNpczo1OC4zMzMzMyU7bWF4LXdpZHRoOjU4LjMzMzMzJX0uY29sLWxnLTh7ZmxleC1iYXNpczo2Ni42NjY2NyU7bWF4LXdpZHRoOjY2LjY2NjY3JX0uY29sLWxnLTl7ZmxleC1iYXNpczo3NSU7bWF4LXdpZHRoOjc1JX0uY29sLWxnLTEwe2ZsZXgtYmFzaXM6ODMuMzMzMzMlO21heC13aWR0aDo4My4zMzMzMyV9LmNvbC1sZy0xMXtmbGV4LWJhc2lzOjkxLjY2NjY3JTttYXgtd2lkdGg6OTEuNjY2NjclfS5jb2wtbGctMTJ7ZmxleC1iYXNpczoxMDAlO21heC13aWR0aDoxMDAlfX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5jb2wteGwtMXtmbGV4LWJhc2lzOjguMzMzMzMlO21heC13aWR0aDo4LjMzMzMzJX0uY29sLXhsLTJ7ZmxleC1iYXNpczoxNi42NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY3JX0uY29sLXhsLTN7ZmxleC1iYXNpczoyNSU7bWF4LXdpZHRoOjI1JX0uY29sLXhsLTR7ZmxleC1iYXNpczozMy4zMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzJX0uY29sLXhsLTV7ZmxleC1iYXNpczo0MS42NjY2NyU7bWF4LXdpZHRoOjQxLjY2NjY3JX0uY29sLXhsLTZ7ZmxleC1iYXNpczo1MCU7bWF4LXdpZHRoOjUwJX0uY29sLXhsLTd7ZmxleC1iYXNpczo1OC4zMzMzMyU7bWF4LXdpZHRoOjU4LjMzMzMzJX0uY29sLXhsLTh7ZmxleC1iYXNpczo2Ni42NjY2NyU7bWF4LXdpZHRoOjY2LjY2NjY3JX0uY29sLXhsLTl7ZmxleC1iYXNpczo3NSU7bWF4LXdpZHRoOjc1JX0uY29sLXhsLTEwe2ZsZXgtYmFzaXM6ODMuMzMzMzMlO21heC13aWR0aDo4My4zMzMzMyV9LmNvbC14bC0xMXtmbGV4LWJhc2lzOjkxLjY2NjY3JTttYXgtd2lkdGg6OTEuNjY2NjclfS5jb2wteGwtMTJ7ZmxleC1iYXNpczoxMDAlO21heC13aWR0aDoxMDAlfX1AbWVkaWEgKG1pbi13aWR0aDoxNTAwcHgpey5jb2wteHhsLTF7ZmxleC1iYXNpczo4LjMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMyV9LmNvbC14eGwtMntmbGV4LWJhc2lzOjE2LjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjclfS5jb2wteHhsLTN7ZmxleC1iYXNpczoyNSU7bWF4LXdpZHRoOjI1JX0uY29sLXh4bC00e2ZsZXgtYmFzaXM6MzMuMzMzMzMlO21heC13aWR0aDozMy4zMzMzMyV9LmNvbC14eGwtNXtmbGV4LWJhc2lzOjQxLjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjclfS5jb2wteHhsLTZ7ZmxleC1iYXNpczo1MCU7bWF4LXdpZHRoOjUwJX0uY29sLXh4bC03e2ZsZXgtYmFzaXM6NTguMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMyV9LmNvbC14eGwtOHtmbGV4LWJhc2lzOjY2LjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjclfS5jb2wteHhsLTl7ZmxleC1iYXNpczo3NSU7bWF4LXdpZHRoOjc1JX0uY29sLXh4bC0xMHtmbGV4LWJhc2lzOjgzLjMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMlfS5jb2wteHhsLTExe2ZsZXgtYmFzaXM6OTEuNjY2NjclO21heC13aWR0aDo5MS42NjY2NyV9LmNvbC14eGwtMTJ7ZmxleC1iYXNpczoxMDAlO21heC13aWR0aDoxMDAlfX0ucmlwcGxle3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjt0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApfS5yaXBwbGU6YWZ0ZXJ7Y29udGVudDpcXFwiXFxcIjtkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7dG9wOjA7bGVmdDowO3BvaW50ZXItZXZlbnRzOm5vbmU7YmFja2dyb3VuZC1pbWFnZTpyYWRpYWwtZ3JhZGllbnQoY2lyY2xlLCMwMDAgMTAlLHRyYW5zcGFyZW50IDEwLjAxJSk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246NTAlO3RyYW5zZm9ybTpzY2FsZSgxMCwxMCk7b3BhY2l0eTowO3RyYW5zaXRpb246dHJhbnNmb3JtIC41cyxvcGFjaXR5IDFzfS5yaXBwbGU6YWN0aXZlOmFmdGVye3RyYW5zZm9ybTpzY2FsZSgwLDApO29wYWNpdHk6LjI7dHJhbnNpdGlvbjowc30ubWwtNXB4e21hcmdpbi1sZWZ0OjVweH0ubWwtMTBweHttYXJnaW4tbGVmdDoxMHB4fS5tbC0xNXB4e21hcmdpbi1sZWZ0OjE1cHh9Lm1sLTIwcHh7bWFyZ2luLWxlZnQ6MjBweH0ubXItNXB4e21hcmdpbi1yaWdodDo1cHh9Lm1yLTEwcHh7bWFyZ2luLXJpZ2h0OjEwcHh9Lm1yLTE1cHh7bWFyZ2luLXJpZ2h0OjE1cHh9Lm1yLTIwcHh7bWFyZ2luLXJpZ2h0OjIwcHh9Lm10LTVweHttYXJnaW4tdG9wOjVweH0ubXQtMTBweHttYXJnaW4tdG9wOjEwcHh9Lm10LTE1cHh7bWFyZ2luLXRvcDoxNXB4fS5tdC0yMHB4e21hcmdpbi10b3A6MjBweH0ubWItNXB4e21hcmdpbi1ib3R0b206NXB4fS5tYi0xMHB4e21hcmdpbi1ib3R0b206MTBweH0ubWItMTVweHttYXJnaW4tYm90dG9tOjE1cHh9Lm1iLTIwcHh7bWFyZ2luLWJvdHRvbToyMHB4fS5wdC01cHh7cGFkZGluZy10b3A6NXB4fS5wdC0xMHB4e3BhZGRpbmctdG9wOjEwcHh9LnB0LTE1cHh7cGFkZGluZy10b3A6MTVweH0ucHQtMjBweHtwYWRkaW5nLXRvcDoyMHB4fS5wYi01cHh7cGFkZGluZy1ib3R0b206NXB4fS5wYi0xMHB4e3BhZGRpbmctYm90dG9tOjEwcHh9LnBiLTE1cHh7cGFkZGluZy1ib3R0b206MTVweH0ucGItMjBweHtwYWRkaW5nLWJvdHRvbToyMHB4fS5wbC01cHh7cGFkZGluZy1sZWZ0OjVweH0ucGwtMTBweHtwYWRkaW5nLWxlZnQ6MTBweH0ucGwtMTVweHtwYWRkaW5nLWxlZnQ6MTVweH0ucGwtMjBweHtwYWRkaW5nLWxlZnQ6MjBweH0ucHItNXB4e3BhZGRpbmctcmlnaHQ6NXB4fS5wci0xMHB4e3BhZGRpbmctcmlnaHQ6MTBweH0ucHItMTVweHtwYWRkaW5nLXJpZ2h0OjE1cHh9LnByLTIwcHh7cGFkZGluZy1yaWdodDoyMHB4fS5saXN0Pip7Zm9udC1zaXplOjFyZW07bGluZS1oZWlnaHQ6MnJlbX0ubGlzdC5kZWNpbWFse2xpc3Qtc3R5bGUtdHlwZTpkZWNpbWFsfS5saXN0LmRpc2N7bGlzdC1zdHlsZS10eXBlOmRpc2N9Lmxpc3Quc3F1YXJle2xpc3Qtc3R5bGUtdHlwZTpzcXVhcmV9XCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiLy8gcmVxdWlyZShcIi4vZWxlbWVudC5leHBvcnQuanNcIik7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL3dpZGdldC5jb21tb25qczIuanNcIik7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsImltcG9ydCB7IFdpZGdldCB9IGZyb20gXCJAbWF0aWNuZXR3b3JrL3dhbGxldC13aWRnZXRcIjtcbmltcG9ydCBcImZsZXhzdHlsZVwiO1xubGV0IHNhdmVkTmV0d29yayA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwibmV0d29ya1wiKTtcbnNhdmVkTmV0d29yayA9IHNhdmVkTmV0d29yayA/IHNhdmVkTmV0d29yayBhcyBhbnkgOiBcIm1haW5uZXRcIlxuY29uc3QgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2VsZWN0TmV0d29yaycpIGFzIEhUTUxTZWxlY3RFbGVtZW50O1xuZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoZSkgPT4ge1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwibmV0d29ya1wiLCAoZS50YXJnZXQgYXMgYW55KS52YWx1ZSk7XG4gICAgbG9jYXRpb24ucmVsb2FkKCk7XG59KVxuZWwudmFsdWUgPSBzYXZlZE5ldHdvcms7XG5jb25zdCB3aWRnZXQgPSBuZXcgV2lkZ2V0KHtcbiAgICBhcHBOYW1lOiBcInRlc3RcIixcbiAgICBhdXRvU2hvd1RpbWU6IDEsXG4gICAgcG9zaXRpb246IFwiYm90dG9tLXJpZ2h0XCIsXG4gICAgdGFyZ2V0OiAnI3dpZGdldCcsXG4gICAgbmV0d29yazogc2F2ZWROZXR3b3JrIGFzIGFueVxufSlcblxud2lkZ2V0LmNyZWF0ZSgpO1xuXG4iLCJtb2R1bGUuZXhwb3J0cyA9XG4vKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuLyoqKioqKi8gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4vKioqKioqLyBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuLyoqKioqKi8gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4vKioqKioqLyBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gbnM7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi93aWRnZXQvaW5kZXgudHNcIik7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovICh7XG5cbi8qKiovIFwiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3dpZGdldC9zdHlsZXMvaW5kZXguc2Nzc1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi93aWRnZXQvc3R5bGVzL2luZGV4LnNjc3MgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzICovIFwiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaSwgXCIubWF0aWMtd2lkZ2V0IHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICNmMWVkZWQ7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXM7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gIG1heC1oZWlnaHQ6IDkwJTtcXG4gIG1heC13aWR0aDogODAlO1xcbiAgei1pbmRleDogMTAwMDA7IH1cXG4gIC5tYXRpYy13aWRnZXQubWF0aWMtd2lkZ2V0LS1zbGlkZS1kb3duIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMDBweCk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7IH1cXG4gIC5tYXRpYy13aWRnZXQubWF0aWMtd2lkZ2V0LS1zbGlkZS11cCB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTsgfVxcbiAgLm1hdGljLXdpZGdldC5tYXRpYy13aWRnZXQtLWhpZGUge1xcbiAgICBkaXNwbGF5OiBub25lOyB9XFxuICAubWF0aWMtd2lkZ2V0IC5tYXRpYy13aWRnZXRfaWZyYW1lIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgYm9yZGVyOiBub25lOyB9XFxuICAubWF0aWMtd2lkZ2V0LmNlbnRlciB7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OiAwO1xcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xcbiAgICB0b3A6IDA7XFxuICAgIGJvdHRvbTogMDtcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXG4gICAgbWFyZ2luLWJvdHRvbTogYXV0bzsgfVxcbiAgLm1hdGljLXdpZGdldC5ib3R0b20tcmlnaHQge1xcbiAgICBib3R0b206IDVweDtcXG4gICAgcmlnaHQ6IDVweDsgfVxcbiAgLm1hdGljLXdpZGdldC5ib3R0b20tbGVmdCB7XFxuICAgIGJvdHRvbTogNXB4O1xcbiAgICBsZWZ0OiA1cHg7IH1cXG4gIC5tYXRpYy13aWRnZXQud2lkZ2V0LW92ZXJsYXk6OmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHRvcDogMDtcXG4gICAgbGVmdDogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICBhbmltYXRpb246IDAuM3MgZWFzZSAxLjg3cyBmb3J3YXJkcyBmYWRlLWluOyB9XFxuXFxuQGtleWZyYW1lcyBmYWRlLWluIHtcXG4gIDAlIHtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDsgfVxcbiAgODAlIHtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDsgfVxcbiAgMTAwJSB7XFxuICAgIGJvcmRlci1yYWRpdXM6IDA7IH0gfVxcblwiLCBcIlwiXSk7XG5cblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgbm8gc3RhdGljIGV4cG9ydHMgZm91bmQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gJ0BtZWRpYSAnICsgaXRlbVsyXSArICd7JyArIGNvbnRlbnQgKyAnfSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgIH1cbiAgICB9KS5qb2luKCcnKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tpXTsgLy8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuICAgICAgLy8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcbiAgICAgIC8vIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cbiAgICAgIC8vIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblxuICAgICAgaWYgKGl0ZW1bMF0gPT0gbnVsbCB8fCAhYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBpZiAobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2UgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICBpdGVtWzJdID0gJygnICsgaXRlbVsyXSArICcpIGFuZCAoJyArIG1lZGlhUXVlcnkgKyAnKSc7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLyc7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG4gIHJldHVybiAnLyojICcgKyBkYXRhICsgJyAqLyc7XG59XG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0LCBwYXJlbnQpIHtcbiAgaWYgKHBhcmVudCl7XG4gICAgcmV0dXJuIHBhcmVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG4gIH1cbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcbn07XG5cbnZhciBnZXRFbGVtZW50ID0gKGZ1bmN0aW9uIChmbikge1xuXHR2YXIgbWVtbyA9IHt9O1xuXG5cdHJldHVybiBmdW5jdGlvbih0YXJnZXQsIHBhcmVudCkge1xuICAgICAgICAgICAgICAgIC8vIElmIHBhc3NpbmcgZnVuY3Rpb24gaW4gb3B0aW9ucywgdGhlbiB1c2UgaXQgZm9yIHJlc29sdmUgXCJoZWFkXCIgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAvLyBVc2VmdWwgZm9yIFNoYWRvdyBSb290IHN0eWxlIGkuZVxuICAgICAgICAgICAgICAgIC8vIHtcbiAgICAgICAgICAgICAgICAvLyAgIGluc2VydEludG86IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9vXCIpLnNoYWRvd1Jvb3QgfVxuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHRhcmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuXHRcdFx0dmFyIHN0eWxlVGFyZ2V0ID0gZ2V0VGFyZ2V0LmNhbGwodGhpcywgdGFyZ2V0LCBwYXJlbnQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXJscyAqLyBcIi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihsaXN0LCBvcHRpb25zKSB7XG5cdGlmICh0eXBlb2YgREVCVUcgIT09IFwidW5kZWZpbmVkXCIgJiYgREVCVUcpIHtcblx0XHRpZiAodHlwZW9mIGRvY3VtZW50ICE9PSBcIm9iamVjdFwiKSB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgc3R5bGUtbG9hZGVyIGNhbm5vdCBiZSB1c2VkIGluIGEgbm9uLWJyb3dzZXIgZW52aXJvbm1lbnRcIik7XG5cdH1cblxuXHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuXHRvcHRpb25zLmF0dHJzID0gdHlwZW9mIG9wdGlvbnMuYXR0cnMgPT09IFwib2JqZWN0XCIgPyBvcHRpb25zLmF0dHJzIDoge307XG5cblx0Ly8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG5cdC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2Vcblx0aWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09IFwiYm9vbGVhblwiKSBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSA8aGVhZD4gZWxlbWVudFxuICAgICAgICBpZiAoIW9wdGlvbnMuaW5zZXJ0SW50bykgb3B0aW9ucy5pbnNlcnRJbnRvID0gXCJoZWFkXCI7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgYm90dG9tIG9mIHRoZSB0YXJnZXRcblx0aWYgKCFvcHRpb25zLmluc2VydEF0KSBvcHRpb25zLmluc2VydEF0ID0gXCJib3R0b21cIjtcblxuXHR2YXIgc3R5bGVzID0gbGlzdFRvU3R5bGVzKGxpc3QsIG9wdGlvbnMpO1xuXG5cdGFkZFN0eWxlc1RvRG9tKHN0eWxlcywgb3B0aW9ucyk7XG5cblx0cmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZSAobmV3TGlzdCkge1xuXHRcdHZhciBtYXlSZW1vdmUgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0XHRkb21TdHlsZS5yZWZzLS07XG5cdFx0XHRtYXlSZW1vdmUucHVzaChkb21TdHlsZSk7XG5cdFx0fVxuXG5cdFx0aWYobmV3TGlzdCkge1xuXHRcdFx0dmFyIG5ld1N0eWxlcyA9IGxpc3RUb1N0eWxlcyhuZXdMaXN0LCBvcHRpb25zKTtcblx0XHRcdGFkZFN0eWxlc1RvRG9tKG5ld1N0eWxlcywgb3B0aW9ucyk7XG5cdFx0fVxuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBtYXlSZW1vdmUubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBkb21TdHlsZSA9IG1heVJlbW92ZVtpXTtcblxuXHRcdFx0aWYoZG9tU3R5bGUucmVmcyA9PT0gMCkge1xuXHRcdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSBkb21TdHlsZS5wYXJ0c1tqXSgpO1xuXG5cdFx0XHRcdGRlbGV0ZSBzdHlsZXNJbkRvbVtkb21TdHlsZS5pZF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcblxuZnVuY3Rpb24gYWRkU3R5bGVzVG9Eb20gKHN0eWxlcywgb3B0aW9ucykge1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdHZhciBkb21TdHlsZSA9IHN0eWxlc0luRG9tW2l0ZW0uaWRdO1xuXG5cdFx0aWYoZG9tU3R5bGUpIHtcblx0XHRcdGRvbVN0eWxlLnJlZnMrKztcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGRvbVN0eWxlLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzW2pdKGl0ZW0ucGFydHNbal0pO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IoOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0dmFyIHBhcnRzID0gW107XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdHBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXG5cdFx0XHRzdHlsZXNJbkRvbVtpdGVtLmlkXSA9IHtpZDogaXRlbS5pZCwgcmVmczogMSwgcGFydHM6IHBhcnRzfTtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gbGlzdFRvU3R5bGVzIChsaXN0LCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZXMgPSBbXTtcblx0dmFyIG5ld1N0eWxlcyA9IHt9O1xuXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBpdGVtID0gbGlzdFtpXTtcblx0XHR2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcblx0XHR2YXIgY3NzID0gaXRlbVsxXTtcblx0XHR2YXIgbWVkaWEgPSBpdGVtWzJdO1xuXHRcdHZhciBzb3VyY2VNYXAgPSBpdGVtWzNdO1xuXHRcdHZhciBwYXJ0ID0ge2NzczogY3NzLCBtZWRpYTogbWVkaWEsIHNvdXJjZU1hcDogc291cmNlTWFwfTtcblxuXHRcdGlmKCFuZXdTdHlsZXNbaWRdKSBzdHlsZXMucHVzaChuZXdTdHlsZXNbaWRdID0ge2lkOiBpZCwgcGFydHM6IFtwYXJ0XX0pO1xuXHRcdGVsc2UgbmV3U3R5bGVzW2lkXS5wYXJ0cy5wdXNoKHBhcnQpO1xuXHR9XG5cblx0cmV0dXJuIHN0eWxlcztcbn1cblxuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50IChvcHRpb25zLCBzdHlsZSkge1xuXHR2YXIgdGFyZ2V0ID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8pXG5cblx0aWYgKCF0YXJnZXQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydEludG8nIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcblx0fVxuXG5cdHZhciBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCA9IHN0eWxlc0luc2VydGVkQXRUb3Bbc3R5bGVzSW5zZXJ0ZWRBdFRvcC5sZW5ndGggLSAxXTtcblxuXHRpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJ0b3BcIikge1xuXHRcdGlmICghbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3ApIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIHRhcmdldC5maXJzdENoaWxkKTtcblx0XHR9IGVsc2UgaWYgKGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZyk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdFx0fVxuXHRcdHN0eWxlc0luc2VydGVkQXRUb3AucHVzaChzdHlsZSk7XG5cdH0gZWxzZSBpZiAob3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJib3R0b21cIikge1xuXHRcdHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cdH0gZWxzZSBpZiAodHlwZW9mIG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwib2JqZWN0XCIgJiYgb3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUpIHtcblx0XHR2YXIgbmV4dFNpYmxpbmcgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlLCB0YXJnZXQpO1xuXHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIG5leHRTaWJsaW5nKTtcblx0fSBlbHNlIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJbU3R5bGUgTG9hZGVyXVxcblxcbiBJbnZhbGlkIHZhbHVlIGZvciBwYXJhbWV0ZXIgJ2luc2VydEF0JyAoJ29wdGlvbnMuaW5zZXJ0QXQnKSBmb3VuZC5cXG4gTXVzdCBiZSAndG9wJywgJ2JvdHRvbScsIG9yIE9iamVjdC5cXG4gKGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyI2luc2VydGF0KVxcblwiKTtcblx0fVxufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQgKHN0eWxlKSB7XG5cdGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG5cdHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xuXG5cdHZhciBpZHggPSBzdHlsZXNJbnNlcnRlZEF0VG9wLmluZGV4T2Yoc3R5bGUpO1xuXHRpZihpZHggPj0gMCkge1xuXHRcdHN0eWxlc0luc2VydGVkQXRUb3Auc3BsaWNlKGlkeCwgMSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3JlYXRlU3R5bGVFbGVtZW50IChvcHRpb25zKSB7XG5cdHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXG5cdGlmKG9wdGlvbnMuYXR0cnMubm9uY2UgPT09IHVuZGVmaW5lZCkge1xuXHRcdHZhciBub25jZSA9IGdldE5vbmNlKCk7XG5cdFx0aWYgKG5vbmNlKSB7XG5cdFx0XHRvcHRpb25zLmF0dHJzLm5vbmNlID0gbm9uY2U7XG5cdFx0fVxuXHR9XG5cblx0YWRkQXR0cnMoc3R5bGUsIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgc3R5bGUpO1xuXG5cdHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlTGlua0VsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlua1wiKTtcblxuXHRpZihvcHRpb25zLmF0dHJzLnR5cGUgPT09IHVuZGVmaW5lZCkge1xuXHRcdG9wdGlvbnMuYXR0cnMudHlwZSA9IFwidGV4dC9jc3NcIjtcblx0fVxuXHRvcHRpb25zLmF0dHJzLnJlbCA9IFwic3R5bGVzaGVldFwiO1xuXG5cdGFkZEF0dHJzKGxpbmssIG9wdGlvbnMuYXR0cnMpO1xuXHRpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucywgbGluayk7XG5cblx0cmV0dXJuIGxpbms7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJzIChlbCwgYXR0cnMpIHtcblx0T2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuXHRcdGVsLnNldEF0dHJpYnV0ZShrZXksIGF0dHJzW2tleV0pO1xuXHR9KTtcbn1cblxuZnVuY3Rpb24gZ2V0Tm9uY2UoKSB7XG5cdGlmIChmYWxzZSkge31cblxuXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5uYztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qc1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi91cmxzLmpzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBubyBzdGF0aWMgZXhwb3J0cyBmb3VuZCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcblxuXG4vKioqLyB9KSxcblxuLyoqKi8gXCIuL3NyYy9lbnVtcy93aWRnZXRfZXZlbnQudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vc3JjL2VudW1zL3dpZGdldF9ldmVudC50cyAqKiohXG4gIFxcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogV0lER0VUX0VWRU5UICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIldJREdFVF9FVkVOVFwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIFdJREdFVF9FVkVOVDsgfSk7XG52YXIgV0lER0VUX0VWRU5UO1xuKGZ1bmN0aW9uIChXSURHRVRfRVZFTlQpIHtcbiAgICBXSURHRVRfRVZFTlRbXCJjbG9zZVwiXSA9IFwiY2xvc2VcIjtcbiAgICBXSURHRVRfRVZFTlRbXCJidXJuSW5pdFwiXSA9IFwiYnVybkluaXRcIjtcbiAgICBXSURHRVRfRVZFTlRbXCJidXJuQ29tcGxldGVcIl0gPSBcImJ1cm5Db21wbGV0ZVwiO1xuICAgIFdJREdFVF9FVkVOVFtcImV4aXRJbml0XCJdID0gXCJleGl0SW5pdFwiO1xuICAgIFdJREdFVF9FVkVOVFtcImV4aXRFcnJvclwiXSA9IFwiZXhpdEVycm9yXCI7XG4gICAgV0lER0VUX0VWRU5UW1wiZXhpdENvbXBsZXRlXCJdID0gXCJleGl0Q29tcGxldGVcIjtcbiAgICBXSURHRVRfRVZFTlRbXCJjb25maXJtV2l0aGRyYXdJbml0XCJdID0gXCJjb25maXJtV2l0aGRyYXdJbml0XCI7XG4gICAgV0lER0VUX0VWRU5UW1wiY29uZmlybVdpdGhkcmF3Q29tcGxldGVcIl0gPSBcImNvbmZpcm1XaXRoZHJhd0NvbXBsZXRlXCI7XG4gICAgV0lER0VUX0VWRU5UW1wiY29uZmlybVdpdGhkcmF3RXJyb3JcIl0gPSBcImNvbmZpcm1XaXRoZHJhd0Vycm9yXCI7XG4gICAgV0lER0VUX0VWRU5UW1wibG9hZFwiXSA9IFwibG9hZFwiO1xuICAgIFdJREdFVF9FVkVOVFtcImFwcHJvdmVJbml0XCJdID0gXCJhcHByb3ZlSW5pdFwiO1xuICAgIFdJREdFVF9FVkVOVFtcImFwcHJvdmVDb21wbGV0ZVwiXSA9IFwiYXBwcm92ZUNvbXBsZXRlXCI7XG4gICAgV0lER0VUX0VWRU5UW1wiYXBwcm92ZUVycm9yXCJdID0gXCJhcHByb3ZlRXJyb3JcIjtcbiAgICBXSURHRVRfRVZFTlRbXCJkZXBvc2l0SW5pdFwiXSA9IFwiZGVwb3NpdEluaXRcIjtcbiAgICBXSURHRVRfRVZFTlRbXCJkZXBvc2l0Q29tcGxldGVcIl0gPSBcImRlcG9zaXRDb21wbGV0ZVwiO1xuICAgIFdJREdFVF9FVkVOVFtcImRlcG9zaXRFcnJvclwiXSA9IFwiZGVwb3NpdEVycm9yXCI7XG59KShXSURHRVRfRVZFTlQgfHwgKFdJREdFVF9FVkVOVCA9IHt9KSk7XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi93aWRnZXQvY29uc3RhbnRzLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiEqXFxcbiAgISoqKiAuL3dpZGdldC9jb25zdGFudHMudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGFwcFZlcnNpb24sIGRlZmF1bHRDb25maWcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIoX193ZWJwYWNrX2V4cG9ydHNfXyk7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYXBwVmVyc2lvblwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFwcFZlcnNpb247IH0pO1xuLyogaGFybW9ueSBleHBvcnQgKGJpbmRpbmcpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImRlZmF1bHRDb25maWdcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBkZWZhdWx0Q29uZmlnOyB9KTtcbmNvbnN0IGFwcFZlcnNpb24gPSBcIjEuMC4zXCI7XG5jb25zdCBkZWZhdWx0Q29uZmlnID0ge1xuICAgIGF1dG9TaG93VGltZTogLTEsXG4gICAgaGVpZ2h0OiA2MTgsXG4gICAgbmV3VGFiRm9yTW9iaWxlOiBmYWxzZSxcbiAgICAvL3RpdGxlOiBcIk1hdGljIFdpZGdldFwiLFxuICAgIHdpZHRoOiA1NDAsXG4gICAgcG9zaXRpb246ICcnLFxuICAgIC8vdHlwZTogJ3dhbGxldCcsXG4gICAgLy9zaG91bGRmbG9hdDogdHJ1ZSxcbiAgICBhcHBOYW1lOiAnJyxcbiAgICByZWxhdGl2ZVBhdGg6ICcnLFxuICAgIGFzc2V0c0Zyb21XaWRnZXRTZXJ2ZXI6IHRydWUsXG4gICAgb3ZlcmxheTogZmFsc2UsXG4gICAgc3R5bGU6IHt9XG59O1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vd2lkZ2V0L2luZGV4LnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vd2lkZ2V0L2luZGV4LnRzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIGV4cG9ydHMgcHJvdmlkZWQ6IFdpZGdldCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJXaWRnZXRcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBXaWRnZXQ7IH0pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9jb25zdGFudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vY29uc3RhbnRzICovIFwiLi93aWRnZXQvY29uc3RhbnRzLnRzXCIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9zcmNfZW51bXNfd2lkZ2V0X2V2ZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuLi9zcmMvZW51bXMvd2lkZ2V0X2V2ZW50ICovIFwiLi9zcmMvZW51bXMvd2lkZ2V0X2V2ZW50LnRzXCIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9zdHlsZXNfaW5kZXhfc2Nzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9zdHlsZXMvaW5kZXguc2NzcyAqLyBcIi4vd2lkZ2V0L3N0eWxlcy9pbmRleC5zY3NzXCIpO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9zdHlsZXNfaW5kZXhfc2Nzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9zdHlsZXNfaW5kZXhfc2Nzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fKTtcbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vdXRpbHMgKi8gXCIuL3dpZGdldC91dGlscy9pbmRleC50c1wiKTtcbnZhciBfX2F3YWl0ZXIgPSAodW5kZWZpbmVkICYmIHVuZGVmaW5lZC5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcblxuXG5cblxuY29uc3QgTUFUSUNfV0lER0VUID0gXCJtYXRpYy13aWRnZXRcIjtcbmNsYXNzIFdpZGdldCB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50QnVzID0gbmV3IF91dGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fW1wiRXZlbnRCdXNcIl0oKTtcbiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSBmYWxzZTtcbiAgICAgICAgaWYgKCFjb25maWcubmV0d29yaykge1xuICAgICAgICAgICAgdGhyb3cgYHtNYXRpYyBXaWRnZXQgRXJyb3J9IDogbmV0d29yayBpcyBub3Qgc3BlY2lmaWVkLiBQbGVhc2Ugc3BlY2lmeSBuZXR3b3JrIHR5cGUuYDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jb25maWcgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIF9jb25zdGFudHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfX1tcImRlZmF1bHRDb25maWdcIl0pLCBjb25maWcpO1xuICAgIH1cbiAgICBsb2FkQXNzZXRzKHNyY0xpc3QpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb21pc2VzID0gc3JjTGlzdC5tYXAoc3JjID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0KF91dGlsc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19fW1wibG9hZFNjcmlwdFwiXSkoc3JjKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldEFzc2V0cygpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IG1hbmlmZXN0UGF0aCA9IFdpZGdldC5hc3NldHNVcmwgKyBcIm1hbmlmZXN0LmpzXCI7XG4gICAgICAgICAgICB5aWVsZCBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bXCJsb2FkU2NyaXB0XCJdKShtYW5pZmVzdFBhdGgpO1xuICAgICAgICAgICAgcmV0dXJuIHBvbHlnb25XaWRnZXRNYW5pZmVzdDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNyZWF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHRoaXMuX2NvbmZpZztcbiAgICAgICAgICAgIGlmIChjb25maWcuYXNzZXRzRnJvbVdpZGdldFNlcnZlcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFzc2V0cyA9IHlpZWxkIHRoaXMuZ2V0QXNzZXRzKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3JjTGlzdCA9IGFzc2V0cy5tYXAoYXNzZXQgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYCR7V2lkZ2V0LmFzc2V0c1VybH0ke2Fzc2V0fWA7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy5sb2FkQXNzZXRzKHNyY0xpc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNvbmZpZy50YXJnZXQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy50YXJnZXQpO1xuICAgICAgICAgICAgICAgIGlmIChlbHMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgYHtNYXRpYyBXaWRnZXQgRXJyb3J9IDogaW52YWxpZCB0YXJnZXQgc3VwcGxpZWQuIFBsZWFzZSBwcm92aWRlIGEgdmFsaWQgZWxlbWVudCBzZWxlY3Rvci5gO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHMuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZWwub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICAgIHRoaXMuX2VsID0gZWw7XG4gICAgICAgICAgICBlbC5zdHlsZS5jc3NUZXh0ID0gYGhlaWdodDoke2NvbmZpZy5oZWlnaHR9cHg7d2lkdGg6JHtjb25maWcud2lkdGh9cHg7YDtcbiAgICAgICAgICAgIGVsLmNsYXNzTmFtZSA9IGBtYXRpYy13aWRnZXQgJHtjb25maWcucG9zaXRpb259IG1hdGljLXdpZGdldC0taGlkZWA7XG4gICAgICAgICAgICBjb25zdCBjb25maWdTdHlsZSA9IGNvbmZpZy5zdHlsZTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIGNvbmZpZ1N0eWxlKSB7XG4gICAgICAgICAgICAgICAgZWwuc3R5bGVba2V5XSA9IGNvbmZpZ1N0eWxlW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29uZmlnLm92ZXJsYXkpIHtcbiAgICAgICAgICAgICAgICBlbC5jbGFzc05hbWUgKz0gYCB3aWRnZXQtb3ZlcmxheWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB3aWRnZXRFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoTUFUSUNfV0lER0VUKTtcbiAgICAgICAgICAgIHdpZGdldEVsLmNsYXNzTmFtZSA9IFwibWF0aWMtd2lkZ2V0X2lmcmFtZVwiO1xuICAgICAgICAgICAgd2lkZ2V0RWwuc2V0QXR0cmlidXRlKCdhcHBpZCcsIGNvbmZpZy5hcHBOYW1lKTtcbiAgICAgICAgICAgIHdpZGdldEVsLnNldEF0dHJpYnV0ZSgncGFnZScsIGNvbmZpZy5wYWdlKTtcbiAgICAgICAgICAgIHdpZGdldEVsLnNldEF0dHJpYnV0ZSgnYW1vdW50JywgY29uZmlnLmFtb3VudCk7XG4gICAgICAgICAgICB3aWRnZXRFbC5zZXRBdHRyaWJ1dGUoJ25ldHdvcmsnLCBjb25maWcubmV0d29yayk7XG4gICAgICAgICAgICBlbC5hcHBlbmRDaGlsZCh3aWRnZXRFbCk7XG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsKTtcbiAgICAgICAgICAgIHRoaXMuX29uTWVzc2FnZUZyb21XaWRnZXQgPSAoZXYpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBkZXRhaWwgPSBldi5kZXRhaWw7XG4gICAgICAgICAgICAgICAgaWYgKCFkZXRhaWwpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB0aGlzLl9ldmVudEJ1cy5lbWl0KGRldGFpbC5uYW1lLCBkZXRhaWwucGF5bG9hZCk7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChkZXRhaWwubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIF9zcmNfZW51bXNfd2lkZ2V0X2V2ZW50X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8xX19bXCJXSURHRVRfRVZFTlRcIl0uY2xvc2U6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB3aWRnZXRFbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgdGhpcy5fb25NZXNzYWdlRnJvbVdpZGdldCk7XG4gICAgICAgICAgICBpZiAoY29uZmlnLmF1dG9TaG93VGltZSkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3coKTtcbiAgICAgICAgICAgICAgICB9LCBjb25maWcuYXV0b1Nob3dUaW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNob3coKSB7XG4gICAgICAgIGlmICh0aGlzLmlzVmlzaWJsZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5fZWwuY2xhc3NMaXN0LmFkZCgnbWF0aWMtd2lkZ2V0LS1zbGlkZS1kb3duJyk7XG4gICAgICAgIHRoaXMuX2VsLmNsYXNzTGlzdC5yZW1vdmUoJ21hdGljLXdpZGdldC0taGlkZScpO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIE9iamVjdChfdXRpbHNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX1tcImFkZEFuaW1hdGlvblwiXSkodGhpcy5fZWwsICdtYXRpYy13aWRnZXQtLXNsaWRlLXVwJykudGhlbihfID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9lbC5jbGFzc0xpc3QucmVtb3ZlKCdtYXRpYy13aWRnZXQtLXNsaWRlLWRvd24nKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ldmVudEJ1cy5lbWl0KCdzaG93Jyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSB0cnVlO1xuICAgIH1cbiAgICBoaWRlKCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNWaXNpYmxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBPYmplY3QoX3V0aWxzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bXCJhZGRBbmltYXRpb25cIl0pKHRoaXMuX2VsLCAnbWF0aWMtd2lkZ2V0LS1zbGlkZS1kb3duJykudGhlbihfID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50QnVzLmVtaXQoJ2hpZGUnKTtcbiAgICAgICAgICAgIHRoaXMuX2VsLmNsYXNzTGlzdC5hZGQoJ21hdGljLXdpZGdldC0taGlkZScpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5pc1Zpc2libGUgPSBmYWxzZTtcbiAgICB9XG4gICAgb24oZXZlbnQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50QnVzLm9uKGV2ZW50LCBjYWxsYmFjayk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBvZmYoZXZlbnQsIGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX2V2ZW50QnVzLm9mZihldmVudCwgY2FsbGJhY2spO1xuICAgIH1cbiAgICBkZXN0cm95KCkge1xuICAgICAgICBjb25zdCBlbCA9IHRoaXMuX2VsO1xuICAgICAgICBpZiAoIWVsKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCB3aWRnZXQgPSBlbC5xdWVyeVNlbGVjdG9yKCdtYXRpYy13aWRnZXQnKTtcbiAgICAgICAgd2lkZ2V0ID09PSBudWxsIHx8IHdpZGdldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2lkZ2V0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCB0aGlzLl9vbk1lc3NhZ2VGcm9tV2lkZ2V0KTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChlbCk7XG4gICAgfVxufVxuV2lkZ2V0LmFzc2V0c1VybCA9IGBodHRwczovL3dhbGxldC1hc3NldC5tYXRpYy5uZXR3b3JrL3dpZGdldC9gO1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vd2lkZ2V0L3N0eWxlcy9pbmRleC5zY3NzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vd2lkZ2V0L3N0eWxlcy9pbmRleC5zY3NzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIG5vIHN0YXRpYyBleHBvcnRzIGZvdW5kICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblxudmFyIGNvbnRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguc2NzcyAqLyBcIi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi93aWRnZXQvc3R5bGVzL2luZGV4LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmksIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyAqLyBcIi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYoZmFsc2UpIHt9XG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vd2lkZ2V0L3V0aWxzL2FuaW1hdGVfY3NzLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vd2lkZ2V0L3V0aWxzL2FuaW1hdGVfY3NzLnRzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIGV4cG9ydHMgcHJvdmlkZWQ6IGFkZEFuaW1hdGlvbiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJhZGRBbmltYXRpb25cIiwgZnVuY3Rpb24oKSB7IHJldHVybiBhZGRBbmltYXRpb247IH0pO1xuZnVuY3Rpb24gYWRkQW5pbWF0aW9uKGVsZW1lbnQsIGFuaW1hdGlvbk5hbWUpIHtcbiAgICBjb25zdCBub2RlID0gdHlwZW9mIGVsZW1lbnQgPT0gXCJzdHJpbmdcIiA/IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudCkgOiBlbGVtZW50O1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXMgPT4ge1xuICAgICAgICBmdW5jdGlvbiBoYW5kbGVBbmltYXRpb25FbmQoKSB7XG4gICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5yZW1vdmUoYW5pbWF0aW9uTmFtZSk7XG4gICAgICAgICAgICBub2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgICAgICAgICAgcmVzKCk7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKGFuaW1hdGlvbk5hbWUpO1xuICAgICAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCBoYW5kbGVBbmltYXRpb25FbmQpO1xuICAgIH0pO1xufVxuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vd2lkZ2V0L3V0aWxzL2V2ZW50X2J1cy50c1wiOlxuLyohKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi93aWRnZXQvdXRpbHMvZXZlbnRfYnVzLnRzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qISBleHBvcnRzIHByb3ZpZGVkOiBFdmVudEJ1cyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJFdmVudEJ1c1wiLCBmdW5jdGlvbigpIHsgcmV0dXJuIEV2ZW50QnVzOyB9KTtcbmNsYXNzIEV2ZW50QnVzIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fZXZlbnRzID0ge307XG4gICAgfVxuICAgIG9uKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKCF0aGlzLl9ldmVudHNbZXZlbnROYW1lXSkge1xuICAgICAgICAgICAgdGhpcy5fZXZlbnRzW2V2ZW50TmFtZV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9ldmVudHNbZXZlbnROYW1lXS5wdXNoKGNhbGxiYWNrKTtcbiAgICB9XG4gICAgb2ZmKGV2ZW50TmFtZSwgY2FsbGJhY2spIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2V2ZW50c1tldmVudE5hbWVdLmZpbmRJbmRleChxID0+IHEgPT09IGNhbGxiYWNrKTtcbiAgICAgICAgICAgIGlmIChpbmRleCA+PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZXZlbnRzW2V2ZW50TmFtZV0uc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2V2ZW50c1tldmVudE5hbWVdID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbWl0KGV2ZW50TmFtZSwgLi4uYXJncykge1xuICAgICAgICBjb25zdCBldmVudHMgPSB0aGlzLl9ldmVudHNbZXZlbnROYW1lXTtcbiAgICAgICAgaWYgKGV2ZW50cykge1xuICAgICAgICAgICAgZXZlbnRzLmZvckVhY2goZXYgPT4ge1xuICAgICAgICAgICAgICAgIGV2KGFyZ3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi93aWRnZXQvdXRpbHMvaW5kZXgudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi93aWRnZXQvdXRpbHMvaW5kZXgudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogRXZlbnRCdXMsIGFkZEFuaW1hdGlvbiwgcmVtb3ZlTGFzdFNsYXNoLCBsb2FkU2NyaXB0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yKF9fd2VicGFja19leHBvcnRzX18pO1xuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9ldmVudF9idXNfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vZXZlbnRfYnVzICovIFwiLi93aWRnZXQvdXRpbHMvZXZlbnRfYnVzLnRzXCIpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiRXZlbnRCdXNcIiwgZnVuY3Rpb24oKSB7IHJldHVybiBfZXZlbnRfYnVzX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX19bXCJFdmVudEJ1c1wiXTsgfSk7XG5cbi8qIGhhcm1vbnkgaW1wb3J0ICovIHZhciBfYW5pbWF0ZV9jc3NfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfXyA9IF9fd2VicGFja19yZXF1aXJlX18oLyohIC4vYW5pbWF0ZV9jc3MgKi8gXCIuL3dpZGdldC91dGlscy9hbmltYXRlX2Nzcy50c1wiKTtcbi8qIGhhcm1vbnkgcmVleHBvcnQgKHNhZmUpICovIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcImFkZEFuaW1hdGlvblwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIF9hbmltYXRlX2Nzc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fW1wiYWRkQW5pbWF0aW9uXCJdOyB9KTtcblxuLyogaGFybW9ueSBpbXBvcnQgKi8gdmFyIF9yZW1vdmVfbGFzdF9zbGFzaF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygvKiEgLi9yZW1vdmVfbGFzdF9zbGFzaCAqLyBcIi4vd2lkZ2V0L3V0aWxzL3JlbW92ZV9sYXN0X3NsYXNoLnRzXCIpO1xuLyogaGFybW9ueSByZWV4cG9ydCAoc2FmZSkgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwicmVtb3ZlTGFzdFNsYXNoXCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX3JlbW92ZV9sYXN0X3NsYXNoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX19bXCJyZW1vdmVMYXN0U2xhc2hcIl07IH0pO1xuXG4vKiBoYXJtb255IGltcG9ydCAqLyB2YXIgX2xvYWRfc2NyaXB0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKC8qISAuL2xvYWRfc2NyaXB0ICovIFwiLi93aWRnZXQvdXRpbHMvbG9hZF9zY3JpcHQudHNcIik7XG4vKiBoYXJtb255IHJlZXhwb3J0IChzYWZlKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJsb2FkU2NyaXB0XCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gX2xvYWRfc2NyaXB0X19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19bXCJsb2FkU2NyaXB0XCJdOyB9KTtcblxuXG5cblxuXG5cblxuLyoqKi8gfSksXG5cbi8qKiovIFwiLi93aWRnZXQvdXRpbHMvbG9hZF9zY3JpcHQudHNcIjpcbi8qISoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiohKlxcXG4gICEqKiogLi93aWRnZXQvdXRpbHMvbG9hZF9zY3JpcHQudHMgKioqIVxuICBcXCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiEgZXhwb3J0cyBwcm92aWRlZDogbG9hZFNjcmlwdCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJsb2FkU2NyaXB0XCIsIGZ1bmN0aW9uKCkgeyByZXR1cm4gbG9hZFNjcmlwdDsgfSk7XG5jb25zdCBsb2FkU2NyaXB0ID0gKHNyYykgPT4ge1xuICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIHNjcmlwdC5zcmMgPSBzcmM7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzLCByZWopID0+IHtcbiAgICAgICAgc2NyaXB0Lm9ubG9hZCA9IHJlcztcbiAgICAgICAgc2NyaXB0Lm9uZXJyb3IgPSByZWo7XG4gICAgfSk7XG59O1xuXG5cbi8qKiovIH0pLFxuXG4vKioqLyBcIi4vd2lkZ2V0L3V0aWxzL3JlbW92ZV9sYXN0X3NsYXNoLnRzXCI6XG4vKiEqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqISpcXFxuICAhKioqIC4vd2lkZ2V0L3V0aWxzL3JlbW92ZV9sYXN0X3NsYXNoLnRzICoqKiFcbiAgXFwqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyohIGV4cG9ydHMgcHJvdmlkZWQ6IHJlbW92ZUxhc3RTbGFzaCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcbi8qIGhhcm1vbnkgZXhwb3J0IChiaW5kaW5nKSAqLyBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJyZW1vdmVMYXN0U2xhc2hcIiwgZnVuY3Rpb24oKSB7IHJldHVybiByZW1vdmVMYXN0U2xhc2g7IH0pO1xuY29uc3QgcmVtb3ZlTGFzdFNsYXNoID0gKHVybCkgPT4ge1xuICAgIGNvbnN0IGxhc3RJbmRleCA9IHVybC5sZW5ndGggLSAxO1xuICAgIGlmICh1cmxbbGFzdEluZGV4XSA9PT0gXCIvXCIpIHtcbiAgICAgICAgdXJsID0gdXJsLnN1YnN0cihsYXN0SW5kZXgpO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xufTtcblxuXG4vKioqLyB9KVxuXG4vKioqKioqLyB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdpZGdldC5jb21tb25qczIuanMubWFwIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9saWIubWluLmNzc1wiKTsiLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9saWIubWluLmNzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcblx0dmFyIGxpc3QgPSBbXTtcblxuXHQvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcblx0XHRcdHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApO1xuXHRcdFx0aWYoaXRlbVsyXSkge1xuXHRcdFx0XHRyZXR1cm4gXCJAbWVkaWEgXCIgKyBpdGVtWzJdICsgXCJ7XCIgKyBjb250ZW50ICsgXCJ9XCI7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gY29udGVudDtcblx0XHRcdH1cblx0XHR9KS5qb2luKFwiXCIpO1xuXHR9O1xuXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cdGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcblx0XHRpZih0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIilcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcblx0XHR2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXHRcdFx0aWYodHlwZW9mIGlkID09PSBcIm51bWJlclwiKVxuXHRcdFx0XHRhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG5cdFx0fVxuXHRcdGZvcihpID0gMDsgaSA8IG1vZHVsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gbW9kdWxlc1tpXTtcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcblx0XHRcdC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG5cdFx0XHQvLyAgd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcblx0XHRcdGlmKHR5cGVvZiBpdGVtWzBdICE9PSBcIm51bWJlclwiIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG5cdFx0XHRcdGlmKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcblx0XHRcdFx0fSBlbHNlIGlmKG1lZGlhUXVlcnkpIHtcblx0XHRcdFx0XHRpdGVtWzJdID0gXCIoXCIgKyBpdGVtWzJdICsgXCIpIGFuZCAoXCIgKyBtZWRpYVF1ZXJ5ICsgXCIpXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0bGlzdC5wdXNoKGl0ZW0pO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcblx0cmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG5cdHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblx0aWYgKCFjc3NNYXBwaW5nKSB7XG5cdFx0cmV0dXJuIGNvbnRlbnQ7XG5cdH1cblxuXHRpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0dmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG5cdFx0dmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcblx0XHRcdHJldHVybiAnLyojIHNvdXJjZVVSTD0nICsgY3NzTWFwcGluZy5zb3VyY2VSb290ICsgc291cmNlICsgJyAqLydcblx0XHR9KTtcblxuXHRcdHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oJ1xcbicpO1xuXHR9XG5cblx0cmV0dXJuIFtjb250ZW50XS5qb2luKCdcXG4nKTtcbn1cblxuLy8gQWRhcHRlZCBmcm9tIGNvbnZlcnQtc291cmNlLW1hcCAoTUlUKVxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblx0dmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG5cdHZhciBkYXRhID0gJ3NvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LCcgKyBiYXNlNjQ7XG5cblx0cmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=